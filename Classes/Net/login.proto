//message type define start from 1

syntax = "proto2";
enum ServerVerion{
   VERSION = 150;
}

message ConfigJsonMd5{
   required string fileName = 1;
   required bytes md5 = 2;
   required int32 version = 3;
}

message ConfigJsonResult{
   required string fileName = 1;
   required bytes md5 = 2;
   required int32 version = 3;
   required bytes fileContent = 4;
   required int32 fileOrgSize = 5;
}

message EmailLogin {
  required string email = 1;
  //required string passwd = 2;
  required bytes passwd1 = 5;
  required string networkType = 3;
  required ServerVerion version = 4 [default = VERSION];
  optional string changedEmail = 6;
  required int32 languageCode = 7;
  required string apiUrl = 8;
  required string deviceInfo = 9;
  optional string refcode = 10;
  required string device_hash = 11;
  repeated ConfigJsonMd5 jsonMd5 = 12;
  required string notificationId = 13;
  required int32 osType = 14;//android 0,ios 1,pc 2
}  //1

message Activity{
  required int32 type = 1;
  required int32 index = 2;
} //2

message Task{
  required int32 type = 1;
  required int32 index = 2;
}//3

message SysMessage{
  required int32 type = 1;
  required int32 index = 2;
}//4

message City{
  required int32 nameIdx = 1;
  required int32 nation = 2;
  required int32 status = 3;
  required int32 devLevel = 4;
  required int32 investTotal = 5;
  required int32 type = 6;
  required int32 cityId = 7;
}//5

message SeaEventDefine {
  required int32 type = 1;
  required int32 x = 2;
  required int32 y = 3;
  required int32 r = 4;
  required int32 eventId = 5;
  required int32 npcId = 6;
  required int32 rate = 7; //0-100
  required int32 days = 8;//for type 7-9
  required int32 isFriendNPC=9;
  required int32 npcForceId = 10;
  //required int32 npcLevelStart = 11;
  //required int32 npcLevelEnd = 12;
  required int32 npcLevel = 13;
}

message SeaBlockInfo{
  required int32 x = 1;
  required int32 y = 2;
  required int32 width = 3;
  required int32 height = 4;
  repeated SeaEventDefine events = 5;
  required int64 eventVersion = 6;
  //required int32 fightNpcId = 7;//force exiting duration battle
  required int32 taskNpcId = 8;
}

message DailyRewardData{
   required int32 tableIndex = 1;
   required int32 rewardIndex = 2;
   required int32 sid = 3;
}

message LoginFirstData{
   required string heroName = 1;
   required int64 exp = 2;
   required int32 level = 3;
   required int64 gold = 4;
   required int64 coin = 5;
   required int64 prestige = 6;
   required int32 packageSize = 7;
   required int32 bankSize = 8;
   required int32 nation = 9;
   required int32 gender = 10;
   required int32 iconIdx = 11;
   optional City  lastCity = 12;
   //optional SeaBlockInfo seaInfo = 13;
   required int32 currentSupply = 14;
   required int32 currentCrewNum = 15;
   required int32 enduranceDays = 16;
   required int32 sailingDays = 17;
   required int32 sid = 18;
   required int32 speed = 19;
   //repeated int32 visitedCityIds = 20;
   required int32 guildId = 21;
   required int32 cid = 22;
   required int32 maxSupply=23;
   required int32 maxCrewNum = 24;
   //required int32 totalContinuousDays = 25;
   //repeated DailyRewardData dailyRewardData = 26;
   //repeated int32 discoverdCityIds = 27;
   required int32 requiredSailorCount = 28;
   //required int32 fightNpcId = 29;//force exiting duration battle
   repeated int32 wantedForceIds = 30;
   required int32 shipNum = 31;
   required int32 isGameMaster = 32;
}//6

message EmailLoginResult{
  required int32 failed = 9;
  required int32 userId = 1;
  required int32 sessionId = 2;
  //optional LoginFirstData data = 3;
  required int32 lastCityId = 3;
  required int32 shipx = 4;
  required int32 shipy = 5;
  required int32 needCreateCharacter = 6;
  repeated DailyRewardData dailyRewardData = 7;
  required int32 totalContinuousDays = 8;
  required int32 mainTaskStatus = 11;
  //required int32 clientVersion = 9;
  required ServerVerion serverVersion = 10 [default = VERSION];
  required int32 guildId = 20;
  optional string heroName = 21;
  required int64 exp = 22;
  required int32 cid = 23;
  required int64 gold = 24;
  required int64 coin = 25;
  required int64 prestige = 26;
  required int32 packageSize = 27;
  required int32 bankSize = 28;
  required int32 nation = 29;
  required int32 gender = 30;
  required int32 iconIdx = 31;
  required string email = 32;
  required int32 logType = 33;// 0,email, 1 token
  optional string password = 34;
  required string chatServerToken = 35;
  required int32 authenticated = 36;
  required int32 waitForBattleSeconds = 37;
  required int64 delegateCoins = 38;
  required int32 attackedTimes = 39;
  required string fbInviteCode = 40;
  required int32 currentServerDataVersion = 41;
  required int32 currentCharacterDataVersion = 42;
  repeated int32 popUserSelectVersions = 43;
  required int32 isGameMaster = 44;
  repeated ConfigJsonResult refreshJson = 45;
}//7

message RegisterUser{
  required string email = 1;
  required string networkType = 2;
  required ServerVerion version = 3 [default = VERSION];
  required bytes passwd1 = 4;
  optional string recommendedName = 5;
  required int32 fromTokenLogin = 6;
  required int32 languageCode = 7;
  required string apiUrl = 8;
  required string device_hash = 9;
  required string deviceInfo = 10;
  optional string refcode = 11;
  required string notificationId = 12;
  required int32 osType = 13;//android 0,ios 1,pc 2
}  //8

message ProtoSample{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 argu1 = 3;	
} // 9

message ProtoSampleResult{
  required int32 failed = 1;
  required int32 result = 2;
}//10

//message SailCityFinish{
//  required int32 succ = 1;
 // optional City city = 2;
//}//11

message RegisterUserResult{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 reason = 3;
  //required string passwd = 4;
  //required int32 clientVersion = 5;
  required ServerVerion serverVersion = 6 [default = VERSION];  
  optional string recommendedName = 7;//get name from google
  required int32 logType = 8;// 0,email, 1 token
}  //12

message CreateCharacter{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 companionType = 3; //1,战斗女，2 辅助女，3 战斗男，4，辅助男
  required int32  nationIdx = 4;  // 1-7
  //required int32  iconIdx = 5;
  //required int32  gender = 6;
  required string notificationId = 7;
  required int32 osType = 8;//android 0,ios 1,pc 2
}  //13

message CreateCharacterFailed{
  required int32 reason = 1;
}  //14

message GetFleetCargo{
  required int32 userId = 1;
  required int32 sessionId = 2;
} //15

message FleetCaptain{
  required int32 captainId = 1;
  required int32 isCaptain = 2;
}

message ShipDefine{
	required int32 id = 1;
	required int32  sid = 2;
	required int32  position = 3;
	required int32  crew_num = 4;
	required string  cannon_id = 5;
	required int32  cannon_num = 6;
	required string  armor_id = 7;
	required int32  armor_num = 8;
	required int32  rigged_id = 9;
	required int32  rigged_num = 10;
	required string  spinnaker_id = 11;
	required int32  spinnaker_num = 12;
	required int32  bow_gun_id = 13;
	required int32  aft_gun_id = 14;
	required int32  bow_icon_id = 15;
	optional FleetCaptain  captain_id = 16;
	required int32  hp = 17;
	required int32  name = 18;	
	required int32  current_cargo_size = 19;
	required int32  current_cargo_kind = 20;
	
	required int32  cargo_size = 21;
	required int32  cargo_kind = 22;
	required int32  speed = 23;
	required int32  steer_speed = 24;
	required int32  defence = 25;
	required int32  hp_max = 26;

	required int32  max_crew_num = 27;
	required int32  max_cannon_num = 28;
	required int32  max_armor_num = 29;
	required int32  max_spinnaker_num = 30;
	required int32  max_rigged_num = 31;
	required int32  material = 32;
	required int32  price = 33;
	required int32  model_name = 34;
    	required int32  current_hp_max = 35;
	required string user_define_name = 36;
	required int32 supply = 37;
	required int64 arriveDockTime = 38;
	required int32 optionId1 = 39;
	required int32 optionId2 = 40;
	required int32 max_supply = 41;
	required int32 crew_required = 42;
	required int32 requiredLv = 43;
        required int32 attack = 44;
        required int32 optionalNum = 45;
        required string optional_value = 46;
        required int32 city_id = 47;
    required int32 old_ship = 48;
}

message GoodsDefine{
  required int32 id=1;
  required int32 nameIdx=2;
  required int32 price = 3;
  required int32 category = 4;
  required int32 required_lv = 5;
  required int32 weight = 6;
  required int32 amount = 7;
  required int32 proto_id = 8;
}

message ShipGoods{
  repeated GoodsDefine goods = 1;
}

message GetFleetCargoResult{
  required int32 failed = 1;
  repeated ShipDefine ships = 2;
  repeated ShipGoods shipGoods = 3;
} //16

message GetGoodsForShip{
   required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 shipId = 3;
} //17

message GetGoodsForShipResult{
   required int32 failed = 1;
   repeated GoodsDefine goods = 2;
} //18

message ExchangeGoodsForShips{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 firestShipId = 3;
  required int32 secondShipId = 4;
  repeated int32 firstShipGoodsIds = 5;
  repeated int32 secondShipGoodsIds = 6;
  repeated int32 firstShipGoodsAmounts = 7;
  repeated int32 secondShipGoodsAmounts = 8;
} //19

message ExchangeGoodsForShipsResult{
  required int32 result = 1;
} //20

message CheckMailBox{
  required int32 userId = 1;
  required int32 sessionId = 2;
} //21

message CheckMailBoxResult{
  required int32 failed = 1;
  //repeated int32 mailIds = 2;
  required int32 dummy = 2;//ignored
  required int32 newSkillPoints = 3;
  required int32 newFriendsReqs = 4;
  required int32 newGuildReqs = 5;
  required int32 taskCompleted = 6;
  required int32 newMailCount = 7;
  required int32 authenticated = 8;
  required int32 getEmailVerifiedReward = 9;
  required int32 startPirateAttact = 10;//1 start
  required int32 startAttackPirate = 11;//1 start
  required int32 insuranceStatus = 12;
  required int32 sideTaskNeedGoodsId = 13;
  required int32 sideTaskOfferNum = 14;
  required int32 sideTaskNeedNum = 15;
  required int32 sideTaskId = 16;
  required int32 current_package_size = 17;
  required int32 max_package_size = 18;
  required int32 daily_activity_finish = 19;
} //22

message GetMailList{
  required int32 userId = 1;
  required int32 sessionId = 2;
} //23

message MailDefine{
  required int32 mailId = 1;
  required string peerName = 2;
  //required string receiverName = 3;
  required string title = 3;
  required string message = 4;
  required int64  sendTime = 5;
  required int32 attachId = 6;
  required int32 attachType = 7;
  required int32 attachAmount = 8;
  required int64 goodNum = 9;
  required int64 coinNum = 10;
  required int32 status = 11;
  required int32 canTakeAttachment = 12;
  required int32 mailType = 13;
  required int32 peerId = 14;
  required int32 peerIcon = 15;
  required int32 optionalItemNum = 16;
  required int32 uniqueId = 17;
}

message GetMailListResult{
  required int32 failed = 1;
  repeated MailDefine inbox = 2;
  repeated MailDefine outbox = 3;
  repeated MailDefine system = 4;
  repeated MailDefine coceral = 5;
  repeated MailDefine dustbin = 6;
  //repeated MailDefine draft = 7;
} //24

message SendMail{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required string receiverName = 3;
  required int32 coceral = 4;       //coceral or nomal
  required string title = 5;
  required string message = 6;
  required int32 attachId = 7;
  required int32 attachType = 8;
  required int32 attachAmount = 9;
  required int64 goldNum = 10;
  required int64 coinNum = 11;
}//25

message SendMailResult{
  required int32 failed = 1;
  optional MailDefine mail = 2;
  required int64 userCoins = 3;
  required int64 userGolds = 4;
  required int64 fame = 5;
  required int64 exp = 6;
  
}//26

message SalvageItem{
  required int32 itemId = 1;
  required int32 itemCount = 2;
}

message MarkMailStatus{
  required int32 userId = 1;
  required int32 sessionId = 2;
  repeated int32 mailIds = 3;
  required int32 action = 4;   //1,mark as read. 2, move to recycle bin. 3 ,delete permanently. 4,restore from recycle bin. 5, fetch attachment.
}//27

message MarkMailStatusResult{
  required int32 failed = 1;
  required int32 action = 2;
  required int64 userCoins = 3;
  required int64 userGolds = 4;
  required int64 fame = 5;
  required int64 exp = 6;
  required int64 addSailorCoins = 7;
  required int64 sailorCoins = 8;
  required int64 giftAddCoins = 9;
  required int64 addGolds = 10;
  optional SalvageItem item = 11;
  repeated int32 succRecvMailIds = 12;
}//28

message GetItemsBeingSold{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 itemType = 3;
}//29

message BeingSoldItemsDefine{
  required int32 itemId = 1;
  required int64 lastPrice = 2;
  required int32 isPopular = 3;
  required int32 charcterItemId = 4;
  required int32 optionalNum = 5;
  required int32 weight = 6;
  required int32 optionalItemNum = 7;
  //required int32 optionItemCount = 7;
  //optional ShipDefine ships = 7;
  //optional EquipmentDefine equipments = 8;
  //optional DrawingItemsDefine drawings = 9;
}

message GetItemsBeingSoldResult{
  required int32 failed = 1;
  required int32 itemType = 2;
  required int64 gold = 3;
  required int64 coin = 4;
  repeated BeingSoldItemsDefine items = 5;
  required int64 fame = 6;
  required int64 exp = 7;
  //required int32 hasLicense = 8;
  //repeated HatchItemsDefine goods = 8;
  
}//30

message GetLastPrice{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 itemType = 3;
  repeated int32 itemIds = 4;
}//31

message GetLastPriceResult{
  required int32 failed = 1;
  required int32 itemType = 2;
  repeated int32 itemPrices = 3;
  repeated int32 itemCurrencyType = 4;
}//32

message GetOrderList{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 isSell = 3;
}//33

message OrderDefine{
  required int32 itemType = 1;
  required int32 itemId = 2;
  required int64 price = 3;
  required int32 currency = 4;
  required int64 number = 5;
  required int64 expTime = 6;
  required string orderId = 7;
  required int32 cityId = 8;
  required int64 uniqueId = 9;
  required int32 tax = 10;
  required int32 optionalItemNum = 11;
  optional string item_name = 12;
}

message GetOrderListResult{
  required int32 failed = 1;
  required int64 maxOrderNum = 2;
  required int64 fee = 3;
  required int64 tax = 4;
  required int64 gold = 5;
  required int64 coin = 6;
  repeated OrderDefine orders = 7;
  repeated SkillDefine skills = 8;
  required int64 fame = 9;
  required int64 exp = 10;
  required int32 currentOrderNum2 = 11;
  required int32 captain_special_skill_about_decrease_tax_id = 12;
  required int32 captain_special_skill_about_decrease_tax_level = 13;//小伙伴技能,技能id是3或者4
  required int32 captain_special_skill_about_decrease_tax_captain_id = 14;
}//34

message BuyItemShipDetail{
  required int32 shipId = 1;
  required int64 count = 2;
}

message BuyItem{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 itemType = 3;
  required int32 itemId = 4;
  required float averagePrice = 5;
  repeated BuyItemShipDetail shipCount = 6;
  required int64 count = 7;
  required int32 characterItemId = 8;
  required int32 optionalNum = 9;
  required int32 npcOnly = 10;
}//35

message BuyItemResult{
  required int32 failed = 1;
  required int32 itemType = 2;
  required int32 itemId = 3;
  required int64 count = 4;
  required int64 totalPrice = 5;
  required int64 userCoins = 6;
  required int64 userGolds = 7;
  required int32 characterItemId = 8;
  required int32 optionalNum = 9;
  required float resAveragePrice = 10;
  required int64 fame = 11;
  required int64 exp = 12;
  required int64 taxAmount = 13;
  required int64 totalCount = 14;
}//36

message SellItem{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 itemType = 3;
  required int32 itemId = 4;
  required int64 count = 5;
  required float averagePrice = 6;
  //required int32 currencyType = 7;
  required int32 characterItemId = 7;
  required int32 optionalNum = 8;
  required int32 npcOnly = 9;
}//37

message SellItemResult{
  required int32 failed = 1;
  required int32 itemType = 2;
  required int32 itemId = 3;
  required int64 count = 4;
  required int64 totalPrice = 5;
  required int64 userCoins = 6;
  required int64 userGolds = 7;
  required int64 earnings = 8; 
  required int32 characterItemId = 9;
  required int32 optioinalNum = 10;
  required float resAveragePrice = 11;  
  required int64 fame = 12;
  required int64 exp = 13;
  required int64 reqCount = 14;
  required int32 newLevel = 15;
  required int64 taxAmount = 16;
  required int32 expAdded = 17;
  required int32 fameAdded = 18;
  repeated CaptainInfo captains = 19;
  required int32 new_fame_level = 20;
}//38
 
message CreateOrder{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 itemType = 3;
  required int32 itemId = 4;
  required int64 count = 5;
  required int64 price = 6;
  required int32 currencyType = 7;
  required int32 isBid = 8;
  required int32 expDays = 9;
  required int32 characterItemId = 10;
  required int32 optionalNum = 11;
}//39

message CreateOrderResult{
  required int32 failed = 1;
  required string orderId = 2; 
}//40

message SearchTradeItems{
  required int32 userId = 1;
  required int32 sessionId = 2;
  repeated int32 itemTypes = 3;
  repeated int32 itemIds = 4;
}//41

message SearchTradeItemsResult{
  required int32 failed = 1;
  repeated int32 itemTypes = 2;
  repeated int32 itemIds = 3;
  repeated int64 itemPrices = 4;
  repeated int32 itemCurrencyType = 5;
}//42

message GetItemsToSell{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 itemType = 3;
  required int32 forTrade = 4;
}//43

message ToSellItemsDefine{
  required int32 itemId = 1;   //prototype id
  required int64 amount = 2;
  required int64 lastPrice = 3;
  required int32 isPopular = 4;
  required int32 optionalNum = 5;
  required int32 characterItemId = 6;
  required int32 weight = 7;
  required float averageCost = 8;
  optional string optional_value = 9;
  optional string user_define_name = 10;
  required int32 maxdurability = 11;
  required int32 currentdurability = 12;
  required int32 optionalItemNum = 13;
}

message GetItemsToSellResult{
  required int32 failed = 1;
  required int32 itemType = 2;
  required int64 gold = 3;
  required int64 coin = 4;
  repeated ToSellItemsDefine items = 5;
  required int64 fame = 6;
  required int64 exp = 7;
}//44

message GetPriceData{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 itemType = 3;
  required int32 itemId = 4;
  required int64 askedCount = 5;
  required int32 isSell = 6;
  required int32 characterItemId = 7;
  required int32 optionalNum = 8;
}//45

message PriceDataDefine{
  required int32 count = 1;
  required int64 price = 2;
  required string tid = 3;
  required int32 peerId = 4;
  required int32 optionalItemNum = 5;
}

message ShipSizeInfo{
  required int32 usedSize = 1;
  required int32 maxSize = 2;
  required int32 shipId = 3;
  required int32 sid = 4;
}

//message CaptainNormalSkillDefine{
//  required int32 skillId = 1;
//  required int32 protoId = 2;
//  required int32 isCaptain = 3;
//  required int32 skillLevel = 4;
//}

//message CaptainSpecialSkillDefine{
//  required int32 skillId = 1;
//  required int32 protoId = 2;
//  required int32 skillLevel = 3;
//}

message GetPriceDataResult{
  required int32 failed = 1;
  required int32 itemType = 2;
  required int32 itemId = 3;
  required int64 count = 4;
  required int64 tax = 5;
  required int64 gold = 6;
  required int64 coin = 7;
  required float averageCost = 8;
  required int32 weight = 9;
  required int32 curPackageSize = 10;
  required int32 maxPackageSize = 11;
  repeated PriceDataDefine prices = 12;
  repeated ShipSizeInfo shipInfos = 13;
  repeated SkillDefine skills = 14;
  required int64 fame = 15;
  required int64 exp = 16;
  repeated PriceDataDefine npcOnlyPrices = 17;
  required int32 skill_expert_sellor = 18;
  required int32 captain_skill_expert_sellor = 19;
  required int32 captain_skill_expert_sellor_captain_id = 20;
  required int32 captain_skill_expert_sellor_captain_type = 21;
  required int32 skill_tax_protocol = 23;               //skill id:19
  required int32 caption_skill_good_reputation = 24;//skill id:10
  required int32 caption_skill_good_reputation_captain_id = 25;
  required int32 captain_skill_good_reputation_captain_type = 26;
  required int32 captain_special_skill_about_decrease_tax_id = 27;
  required int32 captain_special_skill_about_decrease_tax_level = 28;//小伙伴技能,技能id是3或者4
  required int32 captain_special_skill_about_decrease_tax_captain_id = 29;
}//46


message GetPersonalItem{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 itemType = 3;
  required int32 forTrade = 4;
}//47

message HatchItemsDefine{
   required int32 goodsId = 1;
   required int32 amount = 2;
   required int64 refPrice = 3;
   required int32 isPopular = 4;
   required float averageCost = 5;
   //required int64 npcPrice = 6;
}

message EquipmentDefine{
  required int32 equipmentId = 1; //itemId
  required int32 amount = 2;
  required int64 refPrice = 3;
  required int32 optionalNum = 4;
  required int32 attack = 5;
  required int32 defense = 6;
  required int32 durable = 7;
  required int32 speed = 8;
  required int32 steer_speed = 9;
  required int32 uniqueId = 10; 
  required int32 optionalId = 11;
  optional string optionalvalue = 12;
  required int32 maxDurable = 13;
  required int32 requiredLV = 14;
}

message DrawingItemsDefine{
  required int32 iid = 1;
  required int32 amount = 2;
  required int64 refPrice = 3;
  required int32 requiredItem1 = 4;
  required int32 requiredItem2 = 5;
  required int32 reqItem1Num = 6;
  required int32 reqItem2Num = 7;
  required int64 needCoin = 8;
  required int64 needGolds = 9;
  required int32 define_id = 10;
  required int32 isShip = 11;
  optional string cityList = 12;
  required int32 requiredLv = 13;
  required int32 buildTime = 14; //hours
  required int32 manufactureReq = 15;
  required int32 uniqueId = 16; 
}

message SpecialItemsDefine{
  required int32 itemId = 1;
  required int32 amount = 2;
  required int64 price = 3;
}
//message ShipHatchDefine{
//  required int32 shipId = 1;
//  repeated HatchItemsDefine hatches = 2;
//}

message GetPersonalItemResult{
  required int32 failed = 1;
  required int32 itemType = 2;
  required int64 gold = 3;
  required int64 coin = 4;
  repeated HatchItemsDefine goods = 5;
  repeated ShipDefine ships = 6;
  repeated EquipmentDefine equipments = 7;
  required int32 curPackageSize = 8;
  required int32 maxPackageSize = 9;
  required int64 fame = 10;
  required int64 exp = 11;
  required int32 curGoodsWeight = 12;
  required int32 maxGoodsWeight = 13;
  repeated DrawingItemsDefine drawings = 14;
  repeated SpecialItemsDefine specials = 15;
  required int32 skill_technique_of_cargo = 16;// skill id:23
  required int32 captain_skill_technique_of_cargo = 25;
  required int32 captain_skill_technique_of_cargo_captain_id = 26;
  required int32 captain_skill_technique_of_cargo_captain_type = 27;
  required int32 skill_expert_sellor = 17;
  required int32 captain_skill_expert_sellor = 18;
  required int32 captain_skill_expert_sellor_captain_id = 19;
  required int32 captain_skill_expert_sellor_captain_type = 20;
  required int32 skill_tax_protocol = 21;               //skill id:19
  required int32 caption_skill_good_reputation = 22;//skill id:10
  required int32 caption_skill_good_reputation_captain_id = 23;
  required int32 captain_skill_good_reputation_captain_type = 24;
}//48

message CancelOrder {
  required string orderId = 1;
  required int32 itemType = 2;
  required int32 itemId = 3;
  //required int32 count = 4;
  required int32 userId = 4;
  required int32 sessionId = 5;
  required int32 characterItemId = 6;
  required int32 optionalNum = 7;
}//49

message CancelOrderResult {
  required int32 failed = 1;
  required int64 gold = 2;
  required int64 coin = 3;
  required int64 fame = 4;
  required int64 exp = 5;
}//50

message WarehouseOpration{ 
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 actionCode = 3; //0 == fetch 1 == delete 2,fetch all
  required int32 id = 4; 
  required int64 count = 5;
  //required int32 itemType = 4;
  //required int32 itemId = 5;
}//51

message WarehouseOprationResult {
  required int32 failed = 1;
  required int64 count = 2;
  required int32 actionCode = 3;
}//52

message GetWarehouseItems{
  required int32 userId = 1;
  required int32 sessionId = 2;
} //53

message CityGoodsDefine{
  required int32 itemId = 1;
  required int32 itemType = 2;
  required int32 amount = 3;
  required int32 id = 4;  
  optional string optional_value = 5;
  required int64 destItemid = 6;
  required int32 optionalItemNum = 7;
}

message CityGoods{
  required int32 cityId = 1;
  repeated CityGoodsDefine goods = 2;
}

message GetWarehouseItemsResult{
  required int32 failed = 1;
  optional CityGoods curCityGoods = 2;
  repeated CityGoods otherGoods = 3;
}//54

message BarConsume{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 actionCode = 3;
  required int32 itemId = 4;
}//55

message BarConsumeResult{
  required int32 failed = 1;
  required int32 actionCode = 2;
  required int64 cost = 3;
  required int64 gold = 4;
  required int64 coin = 5;
  required int64 fame = 6;
  required int64 exp = 7;
}//56

message GetBarInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 refreshCaptain = 3;
}//57

message BarMenuDefine{
  required int32 id = 1;
  required int32 price = 2;
  required int32 nameId = 3;
}

message BarCaptainDefine{
  required int32 id = 1;
  required int32 name = 2;
  required int32 level = 4;
  required int32 exp = 5;
  repeated SkillDefine skills = 6;
  required int32 salary = 7;
  required int32 uniqueId = 8;
  required int32 position = 9;
}


//

message  GetBarInfoResult{
  required int32 failed = 1;
  repeated BarMenuDefine foodMenu = 2;
  repeated BarMenuDefine drinkMenu = 3;
  repeated BarCaptainDefine barCaptain = 4;
  optional TaskDefine barTask = 5; // n_bartask in (0,1)
  required int64 gold = 6;
  required int64 coin = 7;
  required int32 treated = 8;
  required int32 hasTask = 9;
  required int32 myCaptainNum = 10;
  required int32 maxCaptainNum = 11;
  required int32 refreshInterval = 12;  
  required int64 lastRefreshTime = 13; // captain list last refresh time
  required int32 employed = 14;
  repeated BarCaptainDefine myCaptain = 15;
  required int64 fame = 16;
  required int64 exp = 17;
  required int32 barGirlPrestige = 18;
  //repeated int32 taskIds = 19;
  optional string taskIds = 19;
  required int64 taskRefreshInterval = 20;
  required int64 surplusRefreshTime = 21;
  required int32 bargirlDrinkCost = 22;
  required int32 treatForGetCrewCost = 23;
  required int32 refreshCaptainCost = 24;
  required int32 refreshTaskCost = 25;
  required int32 hireCrewFee= 26;
  required int32 barGirlPrestigeRequired = 27;
  required int32 drinkTimes = 28;
  required int32 totalCrewNum = 29;
  required int32 friendValue = 30;
  required int32 usedSudanMask = 31;
  optional string coreTaskIds = 32;
  required int32 skill_mission_terminator_level = 33;
  required int32 skill_late_submission = 34;
  optional string npcIndexStr = 35;
  optional string targetCityStr = 36;
  optional string bonusStr = 44;
  required int32 captain_skill_late_submission = 37;
  required int32 captain_skill_late_submission_captain_id = 38;
  required int32 captain_skill_late_submission_captain_type = 39;
  required int32 captain_mission_terminator_level = 40; //skill id :11
  required int32 captain_mission_terminator_captain_id = 41;
  required int32 captain_mission_terminator_captain_type = 42;
  required int32 dialogId = 43;
  required int64 disToCaptainFinish = 45;
}//58

message GetCrew{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 count = 3;
  required int32 fastHire = 4;
}//59

message ShipCrewDefine{
  required int32 shipId = 1;
  required int32 crewMax = 2;
  required int32 crewRequire = 3;
  required int32 crewReal = 4;
  required int32 shipHP = 5;
}

message GetCrewResult{
  required int32 failed = 1;
  required int32 crewNum = 2;
  repeated ShipCrewDefine shipCrew = 3;
  required int64 cost = 4;
  required int64 gold = 5;
  required int64 coin = 6;
  required int64 fame = 7;
  required int64 exp = 8;
  required int32 needCrewNum = 9;
}//60

message TreatBargirl{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//61

message TreatBargirlResult{
  required int32 failed = 1;
  required int32 cost = 2;
  required int64 gold = 3;
  required int64 coin = 4;
  required int64 prestige = 5;
  required int64 exp = 7;
}//62

message GiveBargirlGift{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 itemId = 3;
  required int32 itemType = 4;
}//63

message GiveBargirlGiftResult{
  required int32 failed = 1;
  required int32 prestige = 2;
  required int32 itemId = 3;
  required int32 itemType = 4;
  required int32 addPrestige = 5;
}//64

message GetAvailCrewNum{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//65

message GetAvailCrewNumResult{
  required int32 failed = 1;
  required int32 crewPrice = 2;
  required int32 availCrewNum = 3;
  required int32 currentCrewNum = 4;
  required int32 maxCrewNum = 5;
  required int32 totalRequired = 6;
  required int32 totalSupply = 7;
  required int32 oneCrewSupply = 8;
}//66

message GetTaskList {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 actionCode = 3;
  required int32 refresh = 4;
}//67

message TaskDefine {
  required int32 taskId = 1;
  required int32 taskType = 2;
  required int32 completeCityId = 3;
  required int32 taskStatus = 4;
  required int64 takenTime = 5;
  required int64 surplusTime = 6;
  required int32 completeAmount = 7;
  required int32 taskCoreid = 8;
  required int32 npcIndex = 9;
  required int32 targetCity = 10;
  required int32 hasBonus = 11;
//  required int32 title = 6;
//  required int32 description = 7;
//  required int32 goal = 8;
//  required int32 type = 9;
//  required int32 taskLevel = 10;
}

message GetTaskListResult {
  required int32 failed = 1;
  required int32 actionCode = 2;
  optional TaskDefine curruntTask = 3;
  required int32 cost = 4;
  required int64 gold = 5;
  required int64 coin = 6;
  required int32 refreshInterval = 7;
  required int64 surplusRefreshTime = 8;
  required int64 fame = 9;
  required int64 exp = 10;
  //repeated int32 taskIds = 11;
  optional string taskIds = 11;
  optional string coreTaskIds = 12;
  required int32 skill_mission_terminator_level = 13;
  required int32 skill_late_submission = 14;
  optional string npcIndexStr = 15;
  optional string targetCityStr = 16;
  optional string bonusStr = 18;
  required int32 captain_skill_late_submission = 17;
  required int32 captain_skill_late_submission_captain_id = 19;
  required int32 captain_skill_late_submission_captain_type = 20;
}//68

message GetIntelligence {
  required int32 userId = 1;
  required int32 sessionId = 2;
}//69

message IntelligenceDefine {
  required int32 intelligenceId = 1;
  required int32 IntelligenceContent = 2;	
}

message GetIntelligenceResult {
  required int32 failed = 1;
  //repeated IntelligenceDefine intelligence = 2;
  repeated string json = 2; //type =1,float cord, type = 2,popular goods, type=3,pirate cord, type 4 next task hint
  //{"type":1,"x":1000,"y":1000}
  //{"type":2,"goods":[1,2,3]}
  //{"type":3,"city_id":1,"city_x":1000,"city_y":1000,"npc_x":1000,"npc_y":1000}
  //{"type":4,action. ..}
}//70

message GetCaptain {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 index = 3;
}//71

message GetCaptainResult {
  required int32 failed = 1;
  optional BarCaptainDefine barCaptain = 2;
  required int64 cost = 3;
  required int64 gold = 4;
  required int64 coin = 5;
  repeated BarCaptainDefine captains = 6;
  required int64 fame = 7;
  required int64 exp = 8;
}//72

message HandleTask {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 taskId = 3;
  required int32 actionCode = 4; // 0:get task, 1:submit task,2 get reward,3 give up task
}//73

message TaskRewardItems{
  required int32 itemType = 1;
  required int32 itemId = 2;
  required int32 amount = 3;
}

message HandleTaskResult {
  required int32 failed = 1;
  required int32 actionCode = 2;
  optional TaskDefine task = 3;
  required int64 coin = 4;
  required int64 exp = 5;
  required int64 fame = 6;
  required int64 gold = 7;
  required int32 taskId = 8;
  repeated TaskRewardItems rewardItems = 9;
  required int64 rewardCoin = 10;
  required int32 rewardExp = 11;
  required int64 rewardGold = 12;
  required int32 rewardFame = 13;
  required int32 forceId = 15;
  required int32 forceAffect = 16;
  required int32 newLevel = 17;
  repeated CaptainInfo captains = 18;
  required int32 new_fame_level = 19;
  //repeated int32 taskIds = 20;
  required string taskIds = 20;
  required int32 dialogId = 21;
}//74

message MainTaskItems{
  required int32 taskItemId = 1;
  required int32 taskItemType = 2;
  required int32 taskItemAmount = 3;
}
message CurrentMainTaskInfo{
  required int32 taskId = 1;
  required int32 completedPartNum = 2;  
  repeated MainTaskItems items = 3;
}

message CurrentCompanionTaskInfo{
  repeated CompanionTaskDefine tasks = 1;
}

message GetCurrentCityData {
  required int32 userId = 1;
  required int32 sessionId = 2;
}//75

message GetCurrentCityDataResult {
  required int32 failed = 1;
  optional LoginFirstData data = 2;
  required int32 wareHouseDailyCost = 3;
  required int32 dockDailyCost = 4;
  required int32 captainsDailyCost = 5;
  required int32 friendValue = 6;
  required int32 completeTaskId = 7;
  required int32 completeCoreTaskId = 18;
  required int32 newMailCount = 8;
  required int32 isNewLanding = 9;
  repeated int32 popularGoodsIds = 10;
  required int32 sudanmasknum = 11;
  required int64 sudanmaskId = 12;
  required int32 hasSudanMask = 13;
  required int32 hasLisence = 14;
  required int32 reason = 15; //by defeat or something else
  required int32 skillPoints = 16;
  //repeated OutOfDurableItemDefine brokenEquips = 17;
  repeated int32 wantedForceIds = 19;
  required int32 taskIndex = 20;
  optional CurrentMainTaskInfo mainTaskInfo = 21;
  required int64 onsale_remain_time = 22;
  required int32 authenticated = 23;
  required int32 getEmailVerifiedReward = 24;
  required int32 insertDialogType = 25;// 1 为启动委托剧情,剧情自动启动
  required int32 needAddSailors = 26;
  required int32 needRepiredShip = 27;
  required int32 dialogId = 28;
  required int32 showLottoMessage = 29;
  required int32 haveInviteBonus = 30;
  optional CurrentCompanionTaskInfo companionTaskInfo = 31;
  required int32 availMaxCrewNum = 32;
  required int64 fastHireNeedCoins = 33;
  required int32 needCrewNum = 34;
  required int64 drop_rate_increase_ramian_time = 35;
  required int32 drop_rate_increase_type = 36;
  required int32 consume_mark = 37;
  required int32 current_package_size = 38;
  required int32 max_package_size = 39;
  required int32 maxCrewNum = 40;
  required int32 currentCrewNum = 41;
  required int32 is_in_state_war = 42;
}//76

message GetShipList {
  required int32 userId = 1;
  required int32 sessionId = 2;
}//77

message GetShipListResult {
  required int32 failed = 1;
  repeated ShipDefine ship = 2;  
}//78

message RepairShip {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 shipId = 3;
}//79

message RepairShipResult {
  required int32 failed = 1;
  required int32 cost = 2;
  required int64 coin = 3;
  required int64 gold = 4;
  required int64 fame = 5;
  required int64 exp = 6;
}//80

message RepairAllShips {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 type = 3;//0 fleet,1 dock,2 fleet + dock
}//81

message RepairAllShipsResult {
  required int32 failed = 1;
  required int32 cost = 2;
  required int64 coin = 3;
  required int64 gold = 4;
  required int64 fame = 5;
  required int64 exp = 6;
}//82

message ShipName{
  required int32 shipId = 1;
  required string utf8Name = 2;
}

message FleetFormation {
  required int32 userId = 1;
  required int32 sessionId = 2;
  repeated int32 shipIds = 3;
  repeated int32 deletedShipIds = 4;
//  repeated int32 captainIds = 5;
  repeated FleetCaptain captainIds = 5;
  repeated ShipName shipNames = 6;
  repeated int32 catchShipId = 7;
}//83

message FleetFormationResult {
  required int32 failed = 1;
  required int32 dropSailorNum = 2;
  repeated FleetCaptain captainIds = 3;
}//84

message ParkShip {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 shipId = 3;
  required int32 isUnpark = 4;
}//85

message ParkShipResult {
  required int32 failed = 1;
}//86

message GetDrawings {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 drawingType = 3;
  required int32 subType = 4;
}//87

message ItemDefine {
  required int32 item_id = 1;
  required int32 currentNum = 2;
  required int32 requiredNum = 3;
  required int64 uniqueId = 4;
}

message PredefinedShip {
  required int32 sid = 1;
  required int32 type = 2;
  required int32 speed = 3;
  required int32 steer_speed = 4;
  required int32 defence = 5;
  required int32 hp_max = 6;
  required int32 cargo_kinds = 7;
  required int32 cargo_size = 8;
  required int32 crew_max = 9;
  required int32 cannon_num = 10;
  required int32 armor_num = 11;
  required int32 spinnaker_num = 12;
  required int32 rigged_num = 13;
  required int32 material = 14;
  required int32 price = 15;
  required int32 model_name = 16;
  required int32 crew_require = 17;
  required int32 supply_max = 18;
}

message ShipdrawingDefine {
  required int32 drawingId = 1;
  required ItemDefine requiredItem1 = 2;
  required ItemDefine requiredItem2 = 3;
  required int32 optionalNum = 4;
  required int64 coin = 5;
  required int64 gold = 6;
  required float requiredTime = 7;
  required PredefinedShip ship = 8;
  required string cityIdList = 9;
  required int32 drawingLevel = 10;
  required int32 amount = 11;
  required int32 itemId = 12;
  required int32 requiredManufacture = 13;
  repeated ItemDefine addRequiredItem = 14;
}

message EquipdrawingDefine {
  required int32 drawingId = 1;
  required ItemDefine requiredItem1 = 2;
  required ItemDefine requiredItem2 = 3;
  required int32 optionalNum = 4;
  required int64 coin = 5;
  required int64 gold = 6;
  required float requiredTime = 7;
  required int32 equipmentId = 8;
  required int32 equipmentName = 9;
  required string equipmentProperties = 10;
  required string cityIdList = 11;
  required int32 drawingLevel = 12;
  required int32 amount = 13;
  required int32 itemId = 14;
  required int32 requiredManufacture = 15;
  repeated ItemDefine addRequiredItem = 16;
}

message GetDrawingsResult {
  required int32 failed = 1;
  required int32 drawingtype = 2;
  required int32 subType = 3;
  repeated ShipdrawingDefine shipdrawing = 4;
  repeated EquipdrawingDefine equipdrawing = 5;
  required int32 currentCityId = 6;
  required int32 currentCityManufacture = 7;
  required int64 coin = 8;
  required int64 gold = 9;
  required int64 fame = 10;
  required int64 exp = 11;
}//88

message BuildShip { // build ship or equipment
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 drawingId = 3;
  required int32 useGold = 4;
}//89

message BuildShipResult {
  required int32 failed = 1;
  required int32 cost = 2;
  required int64 coin = 3;
  required int64 gold = 4;
  required int32 useGold = 5;
  required int64 fame = 6;
  required int64 exp = 7;
  required int32 consumedItemId1 = 8;
  required int32 consumedCount1 = 9;
  required int32 consumedItemId2 = 10;
  required int32 consumedCount2 = 11;
  required int32 action = 12;
  required int32 itemid = 13;
  required int32 consumedItemId3 = 14;
  required int32 consumedCount3 = 15;
  required int32 consumedItemId4 = 16;
  required int32 consumedCount4 = 17;
  required int32 consumedItemId5 = 18;
  required int32 consumedCount5 = 19;
}//90

//message SkillDefine{
//  required int32 skillId = 1;
//  required int32 skillLevel = 2;
//}
message GetBuildingShips {
  required int32 userId = 1;
  required int32 sessionId = 2;
}//91

message BuildingShipDefine {
  required int32 shipManafactureId = 1;
  required int32 designId = 2;
  required int32 startTime = 3;
  required int32 endTime = 4;
  required PredefinedShip ship = 5;
  required int32 currentTime = 6;
  required int32 cityId = 7;  
  required int32 buildCost = 8;
}

message GetBuildingShipsResult {
  required int32 failed = 1;
  repeated BuildingShipDefine ship = 2;
  repeated SkillDefine skills = 3;
}//92

message FinishBuilding {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 shipManufactureId = 3;
}//93

message FinishBuildingResult {
  required int32 failed = 1;
  required int32 cost = 2;
  required int64 coin = 3;
  required int64 gold = 4;
  required int64 fame = 5;
  required int64 exp = 6;
}//94

message GetBuildingEquipment {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 drawingType = 3;
  required int32 subType = 4;
}//95

message BuildingEquipmentDefine {
  required int32 shipManafactureId = 1;
  required int32 designId = 2;
  required int32 startTime = 3;
  required int32 endTime = 4;
  required int32 equipmentId = 5;
  required int32 equipmentName = 6;
  required string equipmentProperties = 7;
  required int32 currentTime = 8;
  required int32 cicyId = 9;
  required int32 equipSubType = 10;
  required int32 buildCost = 11;
}

message GetBuildingEquipmentResult {
  required int32 failed = 1;
  repeated BuildingEquipmentDefine equipment = 2;
  required int32 drawingType = 3;
  required int32 subType = 4;
  repeated SkillDefine skills = 5;
}//96

message CancelBuild {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 shipManufactureId = 3;
}//97

message CancelBuildResult {
  required int32 failed = 1;
  required int64 coin = 2;
  required int64 gold = 3;
  required int64 fame = 6;
  required int64 exp = 7;
  required int64 refundCoins = 8;
  required int64 refundGolds = 9;
}//98

message CaptainDefine{
  required int32 id = 1;
  required int32 name = 2;
  required string cName = 3;
  required int32 level = 4;
  required int64 exp = 5;
  required int32 shipId = 6;
  required int32 protoId = 7;
  repeated SkillDefine skills = 8;
  repeated SkillDefine specSkills = 9;
  required int32 isCaptain = 10;
}

message GetFleetAndDockShips{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//99

message GetFleetAndDockShipsResult{
  required int32 failed = 1;
  repeated ShipDefine fleetShips = 2;
  repeated ShipDefine dockShips = 3;
  repeated CaptainDefine captains = 4;
  repeated EquipDetailInfo equipDetails = 5;
  required int32 morale = 6;
  required int32 inCity = 7;
  required int64 coins = 8;
  required int64 golds = 9;
  repeated ShipDefine catchShips = 10;
  required int32 canTotalCatchShipNum = 11;
  required int32 skill_armour_optimization = 12;
  required int32 skill_reform_of_hull = 13;
  required int32 all_city_dock_ship_num = 14;
  required float shipyard_repair_ship_cost_coin = 15;
  required float shipyard_repair_ship_cost_gold = 16;
}//100

message GetReinforceShipList {
  required int32 userId = 1;
  required int32 sessionId = 2;
}//101

message ReinforceShipDefine {
  required int32 shipId = 1;
  required string shipName = 2;
  required int32 optionalNum = 3;
  required int32 optionalItem1 = 4;
  required int32 optionalItem2 = 5;
  required int32 defense = 6;
  required int32 durable = 7;
  required int32 speed = 8;
  required int32 steering = 9;
  required int32 sailors = 10;
  required int32 maxCargoSize = 11;
  required int32 sid = 12;
  required int32 amount = 13;
  required int32 position = 14;
  optional string optionalValue = 15;
  required int32 maxDurable = 16;
  required int32 maxSailors = 17;
  required int32 definedMaxDurable = 18;
  required int32 currentCargoSize = 19;
  required int32 supply = 20;
  required int32 maxSupply = 21;
  required int32 attack=22;
}

message GetReinforceShipListResult {
  required int32 failed = 1;
  repeated ReinforceShipDefine ship = 2;
  repeated ItemDefine item = 3;
  required int64 reinforceShipCostGold = 4;
  required int64 rerollShipCostGold = 5;
  required int64 reinforceShipCostCoin = 6;
}//102

message ReinforceShip {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 shipId = 3;
  required int32 ItemType = 4; // 1, 2 => option1, option2
  required int32 ItemId = 5; // option1_id or option2_id
  required int32 optionalNum = 6;
}//103

message ReinforceShipResult {
  required int32 failed = 1;
  required int32 cost = 2;
  required int64 coin = 3;
  required int64 gold = 4;
  required int32 ItemType = 6;
  required int32 ItemId = 7;
  optional ReinforceShipDefine shipInfo = 8;
  required int64 fame = 9;
  required int64 exp = 10;
}//104

message RerollShip {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 shipId = 3;
  required int32 optionalItem1 = 4;
  required int32 optionalItem2 = 5;
  required int32 optinoalNum = 6;
}//105

message RerollShipResult {
  required int32 failed = 1;
  required int32 cost = 2;
  required int64 coin = 3;
  required int64 gold = 4;
  optional ReinforceShipDefine shipInfo = 5;
  required int64 fame = 6;
  required int64 exp = 7;
}//106

message GetReinforceEquipList {
  required int32 userId = 1;
  required int32 sessionId = 2;
}//107

message ReinforceEquipDefine {
  required int64 equipmentId = 1;
  required int32 equipmentName = 2;
  required int32 optionalNum = 3;
  required int32 optionalItem = 4;
  required int32 attack = 5;
  required int32 defense = 6;
  required int32 durable = 7;
  required int32 speed = 8;
  required int32 steer_speed = 9;
  required int32 iid = 10;
  required int32 amount = 11;
  optional string optionalvalue = 12;
  required int32 definedMaxDurable = 13;
  required int32 maxDurable =14;
  required int64 shipId = 15;
  required int32 shipSid = 16;
  optional string userDefinedShipName = 17;
  required int32 equipPosition = 18; // 1000x,cannon; 2000x,armor;3000x,spinnaker;4000x,bow_gun
//5000x,tail gun;6000x bow icon;
  required int32 shipPosition = 19;
}

message GetReinforceEquipListResult {
  required int32 failed = 1;
  repeated ReinforceEquipDefine equipmentOnShip = 2;
  repeated ReinforceEquipDefine equipmentsInBag = 3;
  required int64 reinforceEquipCostGold = 4;
  required int64 rerollEquipCostGold = 5;
  required int64 reinforceEquipCostCoin = 6;
  repeated ItemDefine item = 7;
}//108

message ReinforceEquip {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 equipmentId = 3;  //character_item.id, not iid!
  required int32 optionalNum = 4;
  required int32 optionalItemId = 5;
  required int32 shipId = 6;
  required int32 position = 7;
}//109

message ReinforceEquipResult {
  required int32 failed = 1;
  required int32 cost = 2;
  required int64 coin = 3;
  required int64 gold = 4;
  optional ReinforceEquipDefine equipInfo = 5;
  required int64 fame = 6;
  required int64 exp = 7;
}//110

message RerollEquip {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 equipmentId = 3;
  required int32 optionalNum = 4;
  required int32 optionalItem = 5;
  required int32 shipId = 6;
  required int32 position = 7;
}//111

message RerollEquipResult {
  required int32 failed = 1;
  required int32 cost = 2;
  required int64 coin = 3;
  required int64 gold = 4;
  optional ReinforceEquipDefine equipInfo = 5;
  required int64 fame = 6;
  required int64 exp = 7;
}//112

message EquipShip {   //character_item
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 shipId = 3;
  required int32 bowIconId = 4;  //character_item table's index
  required int32 bowGunId = 5;
  required int32 aftGunId = 6;
  optional string spinnakerIds = 7;
  optional string armorIds = 8;
  optional string cannonIds = 9; //id1,id2,id,id,id
  optional string allIds = 10; 
}//113

message EquipShipResult {
  required int32 failed = 1;
}//114

message GetEquipShipInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 shipId = 3;//tmp use
}//115

message EquipDetailInfo{
  required int32 attack = 1;
  required int32 defense = 2;
  required int32 durable = 3;
  required int32 speed = 4;
  required int32 steer_speed = 5;
  required int32 id = 6;
  required int32 iid = 7;
  required int32 requiredLV = 8;
  required int32 maxDurable = 9;
  required int32 optionalItemNum = 10;
}

//message EquipShipInfo{
//  required int32 shipid = 1;
//  required int32 sid = 2;
//  required int32 attack = 3;
//  required int32 defense = 4;
//  required int32 durable = 5;
//  required int32 speed = 6;
//  required int32 steering = 7;
//  required int32 sails = 8;
//  required int32 capacity = 9;
//  optional string shipName = 10;
//  required int32 maxDurable = 11;
//  required int32 definedMaxDurable = 12;
//  required int32 maxSails = 13;
//  required int32 maxCapacity = 14;
//  required int32 definedMaxCapacity = 15;
//  required int32 supply = 16;
//  required int32 maxSupply=17;
//  optional string optional_value = 18;
//  required int32 bowIconId = 19;
//  required int32 bowGunId = 20;
//  required int32 aftGunId = 21;
//  optional string spinnakerIds = 22;
//  optional string armorIds = 23;
//  optional string cannonIds = 24;
//  required int32 maxBowIconNum = 25;
//  required int32 maxBowGunNum = 26;
//  required int32 maxAftNum = 27;
//  required int32 maxRigNum = 28;
//  required int32 maxArmorNum = 29;
//  required int32 maxCannonNum = 30;
//  required int32 optionItemCount = 31;	
//}

message EquipShipInfo{
  required int32 attack = 1;
  required int32 defense = 2;
  required int32 durable = 3;
  required int32 speed = 4;
  required int32 steering = 5;
  required int32 sails = 6;
  required int32 capacity = 7;
  required int32 sid = 8;
  optional string shipName = 9;
  required int32 maxDurable = 10;
  required int32 definedMaxDurable = 11;
  required int32 maxSails = 12;
  required int32 maxCapacity = 13;
  required int32 definedMaxCapacity = 14;
  required int32 supply = 15;
  required int32 maxSupply=16;
  optional string optional_value = 17;
}

//message GetEquipShipInfoResult{
//  required int32 failed = 1;
//  repeated EquipShipInfo shipInfo = 2;
//  repeated EquipDetailInfo equipDetails = 3;
//  repeated EquipDetailInfo unequipeBowIcon = 4;
//  repeated EquipDetailInfo unequipeBowGun = 5;
//  repeated EquipDetailInfo unequipeSpinnaker = 6;
//  repeated EquipDetailInfo unequipeArmor = 7;
//  repeated EquipDetailInfo unequipeCannon = 8;
//}//116

message GetEquipShipInfoResult{
  required int32 failed = 1;
  optional EquipShipInfo shipInfo = 2; // if not set, send_error_message's base_msg will be NULL
  repeated int32 shipList = 3;
  required int32 bowIconId = 4;
  required int32 bowGunId = 5;
  required int32 aftGunId = 6;
  optional string spinnakerIds = 7;
  optional string armorIds = 8;
  optional string cannonIds = 9;
  repeated EquipDetailInfo equipDetails = 10;
  required int32 maxBowIconNum = 11;
  required int32 maxBowGunNum = 12;
  required int32 maxAftNum = 13;
  required int32 maxRigNum = 14;
  required int32 maxArmorNum = 15;
  required int32 maxCannonNum = 16;	
  repeated int32 sidList = 17;
  repeated int32 optionItemCount = 18;
  required int32 skill_armour_optimization = 19;
  required int32 skill_reform_of_hull = 20;
}//116

message GetEquipableItems{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 type = 3; //(itmes 表的 sub_type) 从1开始，依次。 bowIconId bowGunId =2  aftGunId spinnaker = 4 rigged armor = 6 cannonIds
  required int32 isHeroEquip = 4;
} //117

message EquipableItem{
  required int32 id = 1;  //character_item
  required int32 num = 2;
  required int32 iid = 3;
}

message GetEquipableItemsResult{
  repeated EquipableItem items = 1;
  repeated EquipDetailInfo equipDetails = 2;
  required int32 failed = 3;
  required int32 isHeroEquip = 4;
  required int32 type = 5;
} //118

message GetVisitedCities {
  required int32 userId = 1;
  required int32 sessionId = 2;
}// 119

message CityDefine {
  required int32 cityId = 1;
  required int32 friendValue = 2;
//  required int32 cityName = 2;
//  required int32 devLevel = 3;
//  required int32 investTotal = 4;
  required int32 status = 5;
  required int32 nation = 6;
//  required int32 type = 7;
}

message GetVisitedCitiesResult {
  required int32 failed = 1;
  repeated CityDefine city = 2;
  required int32 currentSupply = 3;
  required int32 maxSupply = 4;
  required int32 currentCrewNum = 5;
  required int32 maxCrewNum = 6;
  required int32 enduranceDays = 7;
  required int32 costPerSupply = 8;
  required int32 costPerCrew = 9;
  required int32 sailorsIsEnough = 10;
  repeated ShipCrewDefine shipCrew = 11;
  required int64 coins = 12;
  required int64 gold = 13;
  required int64 fame = 14;
  required int64 exp = 15;
  required int32 wareHouseDailyCost = 16;
  required int32 dockDailyCost = 17;
  required int32 captainsDailyCost = 18;
  required int32 dailyCost = 19;
  repeated int32 wantedForceIds = 20;
  required int32 shipSpeed = 21;
  required int32 currentPackageSize = 22;
  required int32 maxPackageSize = 23;
  required int32 inCity = 24;
  required int32 currentGoodsWeight = 25;
  required int32 maxGoodsWeight = 26;
  required int32 visitedCityNum = 27;
  required int32 secondsPerSailDay = 28;
  required int32 min_attack = 29;
  required int32 min_defense = 30;
  required int32 min_steer_speed = 31;
}// 120

message AddSupply {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 addAmount = 3;
}// 121

message AddSupplyResult {
  required int32 failed = 1;
  required int32 cost = 2;
  required int64 coin = 3;
  required int64 gold = 4;
  required int32 enduranceDays = 5;
  required int64 fame = 6;
  required int64 exp = 7;
  required int32 currentSupply = 8;
  required int32 addedSupply = 9;
}// 122

message ShipPoint{
  required int32 x = 1;
  required int32 y = 2;
  required int32 milliSec = 3;//上一点到这一点花的毫秒数
}

message ShipRoutine{
  repeated ShipPoint roads = 1;
  required int64 startTime = 2;//milliSec
}

message GetNextMapBlock {
  required int32 userId = 1;
  required int32 sessionId = 2;
  //required int32 currentX = 3;
  //required int32 currentY = 4;
  optional ShipRoutine roadmap = 4;//上一次报告位置之后所走过的路径，ship的当前坐标在最后
  required int32 days = 5;
}// 123

message NearbyPlayer{
  required int32 cid = 1;
  required string name = 2;	
  required int32 sid = 3;
  //required int32 x = 4;
  //required int32 y = 5;
  optional ShipRoutine shipRoutine = 4;
  required int32 lv = 6;
  required int32 guildid = 7;
  required int32 nation = 8;
  required int32 gender = 9;
}
message GetNextMapBlockShipInfo{
  required int32 ship_id = 1;
  required int32 sid = 2;
  optional string shipName = 3;
  required int32 current_max_hp = 4;  
}

message GetNextMapBlockResult {
  optional SeaBlockInfo blockInfo = 1; 
  required int32 failed = 2;
  required int32 days = 3;
  required int32 totalSailors = 4;
  required int64 coin = 5;
  required int64 gold = 6;
  required int64 fame = 7;
  required int64 exp = 8;
  required int32 eventChanged = 9;
  required int32 currentSupply = 10;
  required int32 maxSupply = 11;
  required int32 maxSailorNum = 12;
 // required int32 requiredSailorCount = 19;
  required int32 newLevel = 13;
  repeated GetNextMapBlockShipInfo shipInfo = 14;
  repeated CaptainInfo captains = 18;
  repeated OutOfDurableItemDefine brokenEquips = 19;
  required int32 last_safe_city = 20;
  repeated NearbyPlayer players = 21;
  required int32 sail_speed = 22;
  required int32 shipx = 23;
  required int32 shipy = 24;
}// 124

message ShipBowIconInfo{
  required int32 shipId = 1;
  required int32 position = 2;
  required int32 bowIconIId = 4;
}

message LeaveCity {
  required int32 userId = 1;
  required int32 sessionId = 2;
}// 125

message LeaveCityResult {
  required int32 failed = 1;
  required int32 cityX = 2;
  required int32 cityY = 3;
  optional SeaBlockInfo blockInfo = 4;
  required int32 shipId = 5;
  required int32 speed = 6;
  required int32 shipX = 7;
  required int32 shipY = 8;
  required int32 enduranceDays = 9;
  required int32 sailorCount = 10;
  repeated int32 visitedCityIds = 11;
  required int32 wareHouseDailyCost = 12;
  required int32 dockDailyCost = 13;
  required int32 captainsDailyCost = 14;
  required int32 dailyCost = 15;
  required int32 maxTotalSupply = 16;
  required int32 maxSailorCount = 17;
  required int64 exp = 18;
  required int64 fame = 19;
  required int32 expPerday = 20;
  repeated int32 discoverdCityIds = 21;
  required int32 requiredSailorCount = 22;
  repeated int32 wantedForceIds = 23;
  required int32 shipNum = 24;
  required int32 fightNpcId = 25;
  required int32 captain_skill_good_cook = 26;//skill id:9
  required int32 captain_skill_good_cook_captain_id = 27;
  required int32 captain_skill_good_cook_captain_type = 28;
  required int32 skill_ocean_exploration = 29;//skill id:27
  required int32 skill_good_cook = 30;//skill id:28
  required int32 tatalSupply = 31;
  required int32 delegateActive = 32;
  required int32 avoidRockRate = 33;
  required int32 angelRate = 34;
  required int32 avoidStormRate = 35;
  required int32 reportIntervalSec = 36;
  repeated NearbyPlayer players = 37;
  required int32 secondsPerSailDay = 38;
  repeated ShipBowIconInfo bowIcon = 39;
  required int32 captain_skill_outlook = 40;//skill 15
  required int32 captain_skill_outlook_captain_id = 41;
  required int32 captain_skill_outlook_captain_type = 42;
  required int32 captain_skill_sail_operation = 43;//skill 14
  required int32 captain_skill_sail_operation_captain_id = 44;
  required int32 captain_skill_sail_operation_captain_type = 45;
  required int32 captain_skill_logistics = 46;//skill id:17
  required int32 captain_skill_logistics_captain_id = 47;
  required int32 captain_skill_logistics_captain_type = 48;
  required int64 drop_rate_increase_ramian_time = 49;
  required int32 drop_rate_increase_type = 50;
  required int32 current_package_size = 51;
  required int32 max_package_size = 52;
  // TODO
}// 126

message ReachCity {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 currentX = 3; // judge current city
  required int32 currentY = 4;
  required int32 mainTaskFlag = 5;
}// 127

message ReachCityResult {
  required int32 failed = 1;
  required int32 currentCityId = 2;
  required int32 mainTaskStatus = 3;
  required int32 sailingDays = 4;
  repeated ShipDefine fleetShips = 5;
  required int32 wareHouseDailyCost = 6;
  required int32 dockDailyCost = 7;
  required int32 captainsDailyCost = 8;
  required int32 dailyCost = 9;
  required int64 exp = 10;
  required int64 fame = 11;
  required int64 coins = 12;
  required int64 gold = 13;
  required int32 expPerday = 14;
  required int32 addedExp = 15;
  required int32 newLevel = 17;
  repeated CaptainInfo captains = 16;
  required int32 mainTaskFlag = 18;
  required int64 addedFame = 19;
  required int32 newFameLevel = 20;
}// 128

message TriggerSeaEvent {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 eventId = 3;
  required int32 propId = 4;
  required int64 version = 5;
}// 129

message SeaEventLootDefine{
  required int32 itemId = 1; //prop or drawings
  required int32 count = 2; // == 1?
}
message SeaEventShipStatus{
  required int32 ship_id = 1;
  required int32 sid = 2;
  optional string shipName = 3;
  required int32 hp = 4;
  required int32 current_max_hp = 5;
  required int32 lostHp = 6;
  required int32 lostMaxHp = 7;
  required int32 position = 8;
}
message SeaEventLossDefine{
  required int64 coinLoss = 1;
  required int32 crewLoss = 2;
  required int32 durabilityLoss = 3;
  required int32 maxDurabilityLoss = 4;
  required int32 supplyLoss = 5;
  repeated SeaEventShipStatus shipStatus = 6;
}

message ShipEquipInfo{
  required string cannon_id = 1;
  required string armor_id = 2;
  required string spinnaker_id = 3;
  required int32 rigger_id = 4;
  required int32 bow_gun_id = 5;
  required int32 aft_gun_id = 6;
  required int32 bow_icon_id = 7;
  required int32 position = 8;
  required string name = 9;
  required int32 sid = 10;
  required int32 id = 11;
}

message ShipEquipArray{
  repeated ShipEquipInfo shipinfo = 1;
}

message OutOfDurableItemDefine{
   required int32 iid = 1;
   required int32 shipid = 3;
   optional string shipname = 4;
   required int32 position = 5;
   required int32 durability = 6;
}

message TriggerSeaEventResult {
  required int32 failed = 1;
  optional SeaBlockInfo seaInfo = 2;
  required int64 coin = 3;
  required int64 gold = 4;
  // TODO: 返回事件结果
  optional SeaEventLootDefine loot = 5;
  optional SeaEventLossDefine loss = 6;	
  required int64 fame = 7;
  required int64 exp = 8;
  required int32 eventId = 9;
  required int32 eventChanged = 10;
  required int64 lootCoins = 11;
  required int32 type = 12;
  required int32 useProp = 13;  
  required int32 usedPropId = 14;
  required int32 usedPropRemainCount = 15;
  repeated OutOfDurableItemDefine brokenEquips = 16;
  required int32 sail_speed = 17;
  repeated ShipBowIconInfo BowIcon = 18;
  required int32 whileWhale = 19;
//  required int32 avoidRockRate = 20;
//  required int32 angelRate = 21;
//  required int32 avoidStormRate = 22;
}// 130

message FinishSeaEvent {// 某些事件可能会有pending状态, 大部分是什么都不干的。
  required int32 userId = 1; 
  required int32 sessionId = 2;
}// 131

message FinishSeaEventResult {
  required int32 failed = 1;
}// 132

message GetPalaceInfo {
  required int32 userId = 1;
  required int32 sessionId = 2;
}// 133

message GetPalaceInfoResult {
  required int32 failed = 1;
  required int32 development = 2;
  required int32 population = 3;
  required int32 trade = 4;
  required int32 manufacture = 5;
  required int64 myInvestment = 6;
  required int64 totalInvestment = 7;  
  required int32 isMayor = 8;
  required int32 oldDevDirection = 9;
  required int32 newDevDirection = 10;
  required int32 nationIdx = 11;
  required int32 canSelectDevDirection = 12;
  optional string mayorName = 13;
  required int32 mayorLevel = 14;
  required int32 mayorFame = 15;
  required int32 mayorIcon = 16;
  required int32 mayorNation = 17;
  required int64 nextCycleTime = 18; //second
  required int32 isFirstday = 19;
  required int64 lastSessionTopInvest = 20;
  required int32 licensePrice = 21;
  required int32 licenseRequiredFameLv = 22;
  required int64 coins = 23;
  required int64 golds = 24;
  required int64 totalInvestCycleSeconds = 25;
}// 134

message InvestCity {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int64 investCoin = 3; 
}// 135

message InvestCityResult {
  required int32 failed = 1;
  required int64 coin = 2;
  required int64 gold = 3;
  required int64 fame = 4;
  required int64 exp = 5;
  required int64 add_fame = 6;
  required int32 new_fame_level = 7;
  required int32 skill_public_speaking=8;
  required int64 investCoin = 9;
}// 136

message GetRankList {
  required int32 userId = 1;
  required int32 sessionId = 2;
}// 137

message RankInfoDefine {
  required int32 rank = 1;
  required string name = 2;
  required int32 level = 3;
  required int32 country = 4;
  required int64 investment = 5;
  required int32 characterId = 6;
  required string guild = 7;
  required string signature = 8;
  optional int32 voteNum = 9; 
  required int32 iconIdx = 10;
  required int32 guildIcon = 11;
  required int64 fameLv = 12;
  required int64 onlineSec = 13;
  required int32 guildId = 14;
  required int32 relationWithMe = 15;//0 request 1 friend 2 black 3 refuse 4 none
}

message GetRankListResult {
  required int32 failed = 1;
  repeated RankInfoDefine rankInfo = 2;
  required int32 myRank = 3;
  required int64 myInvest = 4;
  required int64 coin = 5;
  required int64 gold = 6;
  required int64 fame = 7;
  required int64 exp = 8;
  required int32 myGuildId = 9;
  required int32 isAdmin = 10;
}// 138

message GetVoteList {
  required int32 userId = 1;
  required int32 sessionId = 2;
}// 139

message GetVoteListResult {
  required int32 failed = 1;
  repeated RankInfoDefine rankinfo = 2;
  required string mayorName = 3;
}// 140

message VoteMayor {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 candidateId = 3;
}// 141

message VoteMayorResult {
  required int32 failed = 1;
}// 142

message ChangeDevDir {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 newDevDirection = 3;  
}// 143

message ChangeDevDirResult {
  required int32 failed = 1;
  required int32 newDevDirection = 2;
} // 144

message GetLabourUnion {
  required int32 userId = 1;
  required int32 sessionId = 2; 
}// 145

message LabourDefine {
  required int32 characterId = 1; 
  required int32 characterName = 2;
  //required int32 isAdmin = 3;
}

message GetLabourUnionResult {
  required int32 failed = 1;
  required int32 LabourUnionId = 2; 
  required string LabourUnionName = 3;
  repeated LabourDefine AdminList = 4;
  repeated LabourDefine StuffList = 5;
  required int32 CreaterId = 6;
  required string CreaterName = 7;
}// 146

message CreateLabourUnion {
  required int32 userId = 1; 
  required int32 sessionId = 2;
  required string LabourUnionName = 3;
}// 147

message CreateLabourUnionResult {
  required int32 failed = 1;
  required int32 LabourUnionId = 2;
  required int64 cost = 3;
  required int64 coin = 4;
  required int64 gold = 5;
  required int64 fame = 6;
  required int64 exp = 7;
}// 148

message DeleteLabourUnion {
  required int32 userId = 1; 
  required int32 sessionId = 2;
}// 149

message DeleteLabourUnionResult {
  required int32 failed = 1;
}// 150

message InviteLabour {
  required int32 userId = 1; 
  required int32 sessionId = 2;
  required int32 memberCid = 3;
}// 151

message InviteLabourResult {
  required int32 failed = 1;
}// 152

message ApplyLabourUnion {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 LabourUnionId = 3;
}// 153

message ApplyLabourUnionResult {
  required int32 failed = 1;
}// 154

message QuitLabourUnion {
  required int32 userId = 1;
  required int32 sessionId = 2;
}// 155

message QuitLabourUnionResult {
  required int32 failed = 1;
}// 156

message KickOutMember {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 memberCid = 3;
}// 157

message KickOutMemberResult {
  required int32 failed = 1;
}// 158

message AdjustPrivilege {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 memberCid = 3;
  required int32 bankPrivilege = 4; // if is 0, do nothing
  required int32 invitePrivilege = 5;
}// 159

message AdjustPrivilegeResult {
  required int32 failed = 1;
  required int32 bankPrivilege = 2;
  required int32 invitePrivilege = 3;
}// 160

message DepositMoney {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int64 money = 3;
  required int32 isPersonal = 4;
}// 161

message DepositMoneyResult {
  required int32 failed = 1;
  required int64 coin = 2; 
  required int64 gold = 3;
  required int64 fame = 4;
  required int64 exp = 5;
}// 162

message WithdrawMoney {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int64 money = 3;
  required int32 isPersonal = 4;
}// 163

message WithdrawMoneyResult {
  required int32 failed = 1;
  required int64 coin = 2; 
  required int64 gold = 3;
  required int64 fame = 4;
  required int64 exp = 5;
}// 164

message DepositItem {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 id = 3;
  required int32 type = 4;
  required int32 isPersonal = 5;
  required int32 iid = 6;
  required int32 num = 7;
}// 165

message DepositItemResult {
  required int32 failed = 1;
  required int32 id = 2;
  required int32 type = 3;
  optional BankItemDefine depositItem = 4;
}// 166

message WithdrawItem {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 id = 3;
  required int32 type = 4;
  required int32 isPersonal = 5;
  required int32 num = 6;
}// 167

message WithdrawItemResult {
  required int32 failed = 1;
  required int32 id = 2;
  required int32 type = 3;
  required int32 num = 4;
}// 168

message ExpandBank {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 isPersonal = 3;
}// 169

message ExpandBankResult {
  required int32 failed = 1;
  required int32 bankCapacity = 2;	
  required int64 cost = 3;
  required int64 coin = 4;
  required int64 gold = 5;
  required int64 fame = 6;
  required int64 exp = 7;
}// 170

message GetBankInfo {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 isPersonal = 3;
}// 171

message BankItemDefine {
  required int32 iid = 1;
  required int32 itemType = 2;
  required int32 characterItemId = 3;
  required int32 num = 4;
  required int32 durability = 5;
  required int32 max_durability = 6;
  required int32 speed = 7;
  required int32 attack = 8;
  required int32 defense = 9;
  required int32 steer_speed = 10;
  required int32 optional_item = 11;
  required int32 optional_num = 12;
  optional string optional_value = 13;
}

message GetBankInfoResult {
  required int32 failed = 1;
  required int64 coin = 2;
  required int32 bankId = 3;
  required int32 maxItemNum = 4;
  repeated BankItemDefine bankItem = 5;
  required int32 isPersonal = 6;
  required int64 fame = 7;
  required int64 exp = 8;
  required int64 gold = 9;
  required int32 guildId = 10;
  required int32 deposit_item =11;
  required int32 withdraw_item = 12;
  required int32 deposit_cash = 13;
  required int32 withdraw_cash=14;
  required int32 isAdmin = 15;
  required int32 friendValue = 16;
  required int32 useSudanProp = 17;
  required int32 tax = 18;
  repeated InsuranceItem insurane = 19;
  required float coinToVTicketFactor = 20; //银币换v票汇率
  optional InsuranceItemStatus myInsurance = 21;
  required int32 delegateActived = 22;
}// 172

message GetBankLog {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 isPersonal = 3;
}// 173

message GetBankLogResult {
  required int32 failed = 1;
  repeated string log = 2;
}// 174

message SetMainTaskStatus {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 status = 3;
  optional string shipName = 4;
}// 175

message SetMainTaskStatusResult {
  required int32 failed = 1;
  required int32 status = 2;
  required int64 coins = 3;
  required int64 golds = 4;
  required int32 exp = 5;
  required int32 fame = 6;
}// 176

message PropsInfo{
  required int32 id = 1;
  required int32 num = 2;
  required int32 propId = 3;
}



message FightSummary{
  required int32 sailNum = 1;
  required int32 shipNum = 2;
  required int32 power = 3;
  required int32 level = 4;
  required int32 isFriend = 5;
  optional string name = 6;
}

message FightCannonInfo{
  required int32 attack = 1;
  required int32 range = 2;
  required int32 cannonid = 3;
}

message BattleCaptainInfo{
  required int32 proto_id = 1;
  required int32 is_captain = 2;
  required int32 battle_special_skill_idx = 3;
  required int32 hp = 4;
  required int32 attack = 5;
  required int32 defense = 6;
  required int32 add_prob = 7;//增加的单挑概率 除以100
}


message FightShipInfo{
  required int32 sid = 1;
  required string shipName = 2;
  optional FightCannonInfo bowGun = 3;
  repeated FightCannonInfo cannons = 4;
  optional FightCannonInfo afterGun = 5;
  required int32 speed = 6;
  required int32 steer_speed = 7; 
  repeated SkillDefine skills = 8;//普通技能和特殊技能用type来区分
  repeated SkillDefine flagship_companion_skills = 20;
  required int32 sailorNum = 9;
  required int32 max_hp = 10;
  required int32 current_hp = 11;
  required int32 defense = 12;
  required int32 shipId = 13;
  required int32 captainId = 14;
  required int32 bowIconIid = 15;
  required int32 maxSailorNum = 16;
  required int32 current_max_hp = 17;
  required int32 model_modify = 18;
  required int32 position = 19;
  optional BattleCaptainInfo battle_info = 21;//单挑信息
  required int32 can_catch = 22;
}

message EngageInFight {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 forceFight = 3;
  required int32 eventId = 4;
  required int64 version = 5;
  required int32 fightType = 6;//0 normal 1 for task 2 pirateattack 3 attackpirate
  required int32 fightLevel = 7; // 1 simple 2 normal 3 hard
} //177

message EngageInFightResult {
  required int32 failed = 1;
  required int32 forceFight = 2;
  repeated PropsInfo props = 3;
  repeated FightShipInfo myships = 4;
  repeated FightShipInfo enemyships = 5;
  required FightSummary myinfo = 6;
  required FightSummary enemyinfo = 7;
  required int32 victoryPercent = 8;
  required string key = 9;
  required string filename = 10;
  required int32 morale = 11;
  required int32 npcId = 12;
  required int32 npcMorale = 13;
  required int32 npcForceId = 14;
  repeated SkillDefine positiveSkills = 15; 
  required int32 eventId = 16;
  required int32 fightType = 17;//0 normal 1 for task 2 for pirate attack 3 attackpirate,4 loot user
  required int32 fightLevel = 18;
  required int32 maxDurable = 19; //seconds
  required int32 canCatchShipNum = 20;
  required int32 cancelFightCost = 21;
  required int32 saveShipCost = 22;
  required int64 vtickets = 23;
  required int32 userLv = 24;
  required int32 userFameLv = 25;
  required int32 supportRansom = 26;
  required int32 charge_initiative = 27;
  required int32 battle_time = 28;
} //178


message EndFightShipInfo{
  required int32 hp = 1;
  required int32 sailorNum =2;
  required int32 shipId = 3;
}

message BattleLogItem{
  required int32 idx = 1;
  required int32 type = 2;//0 炮打敌人 1,杀了敌人多少水手,2,技能杀,3单挑取胜 100,敌人打我，101 敌人杀了多少水手，102 敌人的技能 103敌人单挑取胜
  required int32 myShipId = 3;
  repeated int32 enemyShipIds = 4; //可能是多个
  required int32 hurt = 5;
  required int32 killedSailorNum = 6;
  required int32 addedSailorNum = 14;//捕获水手
  required int32 cannonItemid = 7;
  required int32 skillId = 8;
  required int32 skillOwnerId = 13;//发技能的雇佣军或小伙伴id,如果是玩家本身的设置为0
  required int32 myShipX = 9;
  required int32 myShipY = 10;
  required int32 enemyShipX = 11;
  required int32 enemyShipY = 12;
}
//校验客户端战斗过程
message BattleLog{
  repeated BattleLogItem logs = 1;
}

message EndFight{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 reason = 3; // 1 win, 2 lose ,3 tie
  repeated EndFightShipInfo myships = 4;
  repeated PropsInfo usedProps = 5; 
  required int32 morale = 6;
  required int32 isAutoFight = 7;
  required int32 fightType = 8;//0 normal 1 for task 2 for pirate attack,4 loot user
  required int32 remainSec = 9;
  required int32 attack_hurt = 10;
  required int32 attack_sailors = 11;
  repeated int32 catchShipIds = 12;
  repeated int32 catchGoodsShipIds = 13;
  required int32 useSec = 14;
  optional BattleLog battlelog = 15;
} //179

message LootDefine{
  required int32 itemType = 1;
  required int32 itemId = 2;
  required int32 count = 3;
}

message LostGoodsDefine{
  required int32 shipId = 1;
  required int32 itemId = 2;
  required int32 lostCount = 3;
  required int32 remainCount = 4;
}

message SunkShipDetails{
  required int32 shipId=1;
  required int32 sid=2;
  required int32 lostMaxHP = 3;
  required int32 position = 4;
  required int32 lostSailorNum = 5;
  required int32 lostHp = 6;
  required int32 maxHp = 7;
  required int32 maxSailorNum = 8;
}

message SurvivedShipdetails{
  required int32 shipId=1;
  required int32 sid = 2;
  required int32 maxHp = 3;
  required int32 hp = 4;
  required int32 sailorNum = 5;
  required int32 position = 6;
  required int32 lostSailorNum = 7;
  required int32 lostHp = 8;
  required int32 maxSailorNum = 9;
}

message CaptainInfo{
  required CaptainDefine captain = 1;
  required int32 newLevel = 2;
  required int32 lootExp = 3;
  required int32 position = 4;
}

message EndFightResult{
  required int32 failed = 1;
  required int32 reason = 2;
  required int64 lootCoins = 3;
  repeated LootDefine lootItemsArray = 4;
  //optional LootDefine lootGoods = 5;
  required int32 supply = 6;
  required int32 addedSailDays = 7;
  //optional LootDefine lootProps = 8;
  required int64 lootFame = 9;
  required int64 coins = 10;
  optional SeaBlockInfo seaInfo = 11;
  required int64 lostCoin = 12;
  repeated SunkShipDetails lostShips = 13;
  repeated LostGoodsDefine lostGoods = 14;
  //required int32 flagShipSid = 15;
  //required int32 speed = 16;
  required int32 shipX = 15;
  required int32 shipY = 16;
  required int32 enduranceDays = 17;
  required int32 sailorCount = 18;
  required int64 golds = 19;
  required int64 lootExp = 20;
  required int64 TotalExp = 21;
  required int64 TotalFame = 22;
  required int32 ExpLv = 23;
  required int32 FameLv = 24;
  required int32 newLevel = 25;
  repeated CaptainInfo captains = 26;
  required int32 new_fame_level = 27;
  required int32 isAutoFight = 28;
  repeated SurvivedShipdetails survivedShips = 29;
  required int32 totalSupply = 30;
  repeated OutOfDurableItemDefine brokenEquips = 31;
  required int32 npcId = 32;
  required int32 isProtect = 33;
  required int32 fightType = 34;
  required int32 last_safe_city = 35;
  required int32 presentScore = 36;
  required int32 defensePirateTimes = 37;
  required int32 canAttackPirateCount = 38;
  required int32 hurtPirateAllValue = 39;
  required int32 skill_plunder_master = 40;
  required int32 skill_stealing_from_thieves = 41;
  required int32 skill_food_plunder = 42;
  required int64 extraLootCoins = 43;
  required int32 lootEnemySupply = 44;
  repeated ShipDefine CatchShipDefine = 45;
  required int32 starForLoot = 46;
  required int32 addSailorCoinsForLoot = 47;
  required int32 current_package_size = 48;
  required int32 max_package_size = 49;
//  required int32 avoidRockRate = 46;
//  required int32 angelRate = 47;
//  required int32 avoidStormRate = 48;
//  repeated ShipBowIconInfo BowIcon = 49;
} //180

message StartAutoFight{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 fighttype = 3;
}// 181

message AutoFightShipInfo{
  required int32 sid = 1;
  required string shipName = 2;
  required int32 sailorCount = 3;
  required int32 hp = 4;
  required int32 speed = 5;
}

message StartAutoFightResult{
  required int32 failed = 1;
  required int32 win = 2;
  required int32 isFlagShipChanged = 3;
  required int32 lostSailorsCount = 4;
  repeated AutoFightShipInfo deadShips = 5;
  repeated AutoFightShipInfo remainShips = 6;
  required int32 prestige = 7;
}// 182

message GetSkillsDetails{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//183

message SkillDefine{
  required int32 id=1;
  required int32 level=2;
  required int32 skillType = 3;//0 npc,1,captain,2,player,3,companion normal special,4,companion special
  required int32 level_up = 4;
}
message GetSkillsDetailsResult{
  required int32 failed = 1;
  required int32 skillPoints = 2;
  repeated SkillDefine skills = 3;
  required int32 freeResetTimes = 4;
}//184

message AddSkillPoint{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 skillId = 3;
  required int32 points = 4;
}//185

message AddSkillPointResult{
  required int32 failed = 1;
  required int32 skillId = 2;
  required int32 skillLv = 3;
  required int32 remainSkillPoints = 4;
}//186

message ResetSkillPoints{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//187

message ResetSkillPointsResult{
  required int32 failed = 1;
  required int32 totalPoints = 2;
  required int32 costVTickets = 3;
  required int32 freeResetTimes = 4;
}//188

message NotifyBattleLog{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 fightType = 3;
}//189

message NotifyBattleLogResult{
  required int32 failed = 1;
}//190

message GetPersonalInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
} //191

message FriendValue{
  required int32 nationId = 1;
  required int32 value = 2; // multiplied by 100*1000
}

message GetPersonalInfoResult{
  required int32 failed = 1;
  required string heroName = 2;
  required int32 iconId = 3;
  required int64 level = 4;
  required int64 exp = 5;
  required int64 fame = 6;
  required int64 fameLevel = 7;
  optional string bio = 8;
  optional string guildName = 9;
  required int32 nationId = 10;
  required string regTime = 11;
  required int64 dailyCost = 12;
  required int64 coins = 13;
  required int64 golds = 14;
  required int64 bankCoins = 15;
  repeated FriendValue nation = 16;
  repeated FriendValue personal = 17;
  required int32 gender = 18;
  required int32 guildId = 19;
  required int32 wareHouseDailyCost = 20;
  required int32 dockDailyCost = 21;
  required int32 captainsDailyCost = 22;
  required int32 guildIcon = 23;	
  required int32 skillPoints = 24;
  required int32 isGameMaster = 25;
} //192

message SetBioInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required string bio = 3;
} //193

message SetBioInfoResult{
  required int32 failed = 1;
} //194

message CancelFight {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 type = 3;
  required int32 eventId = 4;
  optional EndFight lastFightInfo = 5;
} //195

message CancelFightResult {
  required int32 failed = 1;
  required int64 useGolds = 2;
  repeated SkillDefine user_positive_skills = 3;
} //196

message GuildInfoDefine{
  required int32 id=1;
  required string name = 2;
  required string adminName = 3;
  required int32 memberNum = 4;
  required int32 nation=5;
  required int32 maxMemNum=6;
  required int32 guildIcon = 7;
} 

message GetGuildList{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//197

message GetGuildListResult{
  required int32 failed = 1;
  required int32 guildid = 3;
  repeated GuildInfoDefine guilds = 2;
  required int32 memberStatus = 4; //0 normal, 1 admin 2 creator
  required int32 applicationNum = 5;
  required int32 invitationNum = 6;
}//198

message GetMyGuildDetails{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//199

message GuildPersonalInfoDefine{
  required int32 characterId = 1;
  required int32 iconId = 2;
  required string heroName = 3;
  required int32 level = 4;
  required int32 memberStatus = 5; //0 normal, 1 admin 2 creator
  required int32 online = 6;
  required int32 nationId = 7;
  required int32 isGameMaster = 8;
}

message GuildRelationDefine{
	required int32 forceId=1;
	required int32 forceRelationValue=2;
}

message GetMyGuildDetailsResult{
  required int32 id=1;
  required int32 failed = 2;
  required int32 maxMemberNum = 3;
  required string name=4;
  repeated GuildPersonalInfoDefine members = 5;
  required string intro=6;
 // required int32 forceId=7;
  required int32 nation=8;
  required int32 currentMemNum=9;
  required int32 creatorId=10;
  required string creatorName=11;
  repeated GuildRelationDefine relations=12;
  required int32 myStatus = 13;
  required string announcement=14;
  required int32 guildIcon = 15;
  required int32 applicationNum = 16;
  required int32 invitationNum = 17;
}//200

message GetApplyInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//201

message ApplyPersonInfoDefine{
  required int32 id=1;
  required int32 characterId = 2;
  required int32 iconId = 3;
  required string heroName = 4;
  required int32 level = 5;
  required int32 nationId = 6;
  required int32 isGameMaster = 7;
}

message GetApplyInfoResult{
  required int32 failed = 1;
  required int32 guild_id=2;
  repeated ApplyPersonInfoDefine applications = 3;
}//202

message CreateNewGuild{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required string guildName = 3;
  required int32 guildIconIdx = 4;
  optional string guildIntro = 5;
}//203

message CreateNewGuildResult{
  required int32 failed = 1;
  required int32 guildId=2;
  required int64 reqLv = 3;
  required int64 reqFame = 4;
  required int64 reqCoins = 5;
  required int64 curLv = 6;
  required int64 curFame = 7;
  required int64 curCoins = 8;
}//204

message JoinGuildRequest{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 guildId = 3;
}//205

message JoinGuildRequestResult{
  required int32 failed = 1;
  required int32 maxMemberNum = 2;
  required int64 coins = 3;
  required int64 gold = 4;
}//206

message GetGuildDetails{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 guildId = 3;
}//207

message GetGuildDetailsResult{
  required int32 id=1;
  required int32 failed = 2;
  required int32 maxMemberNum = 3;
  required string name=4;
  required string intro=6;
 // required int32 forceId=7;
  required int32 nation=8;
  required int32 currentMemNum=9;
  required int32 creatorId=10;
  required string creatorName=11;
  repeated GuildRelationDefine relations=12;
  required int32 myStatus = 13;
  required int32 myGuildId = 14;
  required int32 guildIcon = 15;
}//208

message ChangeGuildIntro{
  required int32 userId=1;
  required int32 sessionId = 2;
  required int32 guildId = 3;
  required string newIntro = 4;
}//209

message ChangeGuildIntroResult{
  required int32 failed = 1;
}//210

message ExpandGuildCapacity{
  required int32 userId=1;
  required int32 sessionId = 2;
}//211

message ExpandGuildCapacityResult{
  required int32 failed=1;
  required int32 newCapacity = 2;
  required int64 coins = 3;
  required int64 gold = 4;
  required int32 curMemberNum = 5;
}//212

message GuildMemberPermissionDefine{
  required int32 character_id = 1;
  required int32 level = 2;
  required int32 iconIdx = 3;
  required string heroName = 4;
  required int32 admin = 6;
  required int32 deposit_item =7;
  required int32 withdraw_item = 8;
  required int32 deposit_cash = 9;
  required int32 withdraw_cash=10;
  required int32 is_creator = 11;
  required int32 nation = 12;
  required int32 isGameMaster = 13;
}

message GetGuildMemberPermission{
  required int32 userId=1;
  required int32 sessionId = 2;
}//213

message GetGuildMemberPermissionResult{
  required int32 failed =1;
  required int32 create_id =2;
  required string creator_name = 3;
  repeated GuildMemberPermissionDefine members = 4;
}//214


message SetGuildPermissionDefine{
  required int32 character_id = 1;
  required int32 admin = 2;
  required int32 deposit_item =3;
  required int32 withdraw_item = 4;
  required int32 deposit_cash = 5;
  required int32 withdraw_cash=6;
}

message SetGuildMemberPermission{
  required int32 userId=1;
  required int32 sessionId = 2;
  repeated SetGuildPermissionDefine members = 3;
} //215

message SetGuildMemberPermissionResult{
  required int32 failed=1;
} //216

message GetHiredCaptains{
  required int32 userId=1;
  required int32 sessionId = 2;
} //217

message GetHiredCaptainsResult{
  required int32 failed=1;
  repeated BarCaptainDefine myCaptains = 2;
} //218

message DealWithGuildJoin{
	required int32 userId=1;
	required int32 sessionId=2;
	required int32 join_id=3;
	required int32 accept=4;
	required int32 character_id=5;
	required int32 guild_id=6;
}//219

message DealWithGuildJoinResult{
  required int32 failed=1;
  required int32 action = 2;
}//220

message ChangeGuildAnnouncement{
  required int32 userId=1;
  required int32 sessionId = 2;
  required int32 guildId = 3;
  required string newAnnouncement = 4;
}//221

message ChangeGuildAnnouncementResult{
  required int32 failed = 1;
}//222

message RemoveGuildMember{
  required int32 userId=1;
  required int32 sessionId = 2;
  required int32 guildId = 3;
  required int32 memberCharacterId = 5;
}//223

message RemoveGuildMemberResult{
  required int32 failed = 1;
}//224


message ExitFromGuild{
  required int32 userId=1;
  required int32 sessionId = 2;
  required int32 guildId = 3;
}//225

message ExitFromGuildResult{
  required int32 failed = 1;
}//226


message DismissGuild{
  required int32 userId=1;
  required int32 sessionId = 2;
  required int32 guildId = 3;
}//227

message DismissGuildResult{
  required int32 failed = 1;
}//228

message GetSearchGuildList{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required string keyword=3;
}//229

message GetSearchGuildListResult{
  required int32 failed = 1;
  required int32 guildid = 3;
  repeated GuildInfoDefine guilds = 2;
}//230

message RefreshCaptainList{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 useGold = 3;
}//231

message RefreshCaptainListResult{
  required int32 failed = 1;
  repeated BarCaptainDefine captains = 2;
  required int64 coins = 3;
  required int64 gold = 4;
  required int64 costGold = 5;
  required int32 refreshInterval = 6;  
  required int64 lastRefreshTime = 7;
  required int64 disToCaptainFinish = 8;
}//232

message GetFriendsList{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//233

message FriendsDefine{
  required int32 characterId = 1;
  required int32 level = 2;
  required int32 fame = 3;
  required int32 iconIdx = 4;
  required int32 nation = 5;
  required string heroName = 6;
  required int32 online =7;
  required int32 status = 8;
  required int32 isGameMaster = 9;
}

message GetFriendsListResult{
  required int32 failed = 1;
  repeated FriendsDefine friends = 2;
  required int32 friendsRequestNum = 3;
  required int32 can_send_gift_count = 4;
  repeated int32 can_not_send_cid = 5;
}//234

message GetBlackList{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//235

message GetBlackListResult{
  required int32 failed = 1;
  repeated FriendsDefine friends = 2;
}//236

message FriendsOperation{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 actionCode = 3; //0 add,1,delete,2,blacklist,3 accept friends req,4 refuse friends req,5 remove from blacklist
  required int32 characterId = 4;
}//237
message FriendsOperationResult{
  required int32 failed = 1;
  required int32 actionCode = 2;
  required int32 characterId = 3;
}//238

message GetFriendsReqList{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//239

message GetFriendsReqListResult{
  required int32 failed = 1;
  repeated FriendsDefine friends = 2;
}//240

message FireCaptain {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 captainId = 3;
}//241

message FireCaptainResult {
  required int32 failed = 1;
  repeated BarCaptainDefine myCaptains = 6;
}//242

message DestoryItems {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 uniqueId = 3;
  required int32 itemType = 4;
  required int64 count = 5;
}//243

message DestoryItemsResult {
  required int32 failed = 1;
  required int64 count = 2;
}//244

message SearchUserByName{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required string heroName = 3;
}//245

message SearchUserByNameResult{
  required int32 failed = 1;
  repeated FriendsDefine friends = 2;
}//246

message TakeAllAttachment{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 mailId = 3;
}//247

message TakeAllAttachmentResult{
  required int32 failed = 1;
  required int64 userCoins = 2;
  required int64 userGolds = 3;
  required int64 fame = 4;
  required int64 exp = 5;
}//248

message GetItemsDetailInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 itemId = 3;
  required int32 itemType = 4;
  required int32 uniqueId = 5;
}//249

message GetItemsDetailInfoResult{
  required int32 failed = 1;
  required int32 itemType = 2;
  required int32 itemId = 8;
  required int32 uniqueId = 9;
  optional HatchItemsDefine goods = 3;
  optional ShipDefine ship = 4;
  optional EquipmentDefine equipment = 5;
  optional DrawingItemsDefine drawing = 6;
  optional SpecialItemsDefine special = 7;
}//250

message GetDevGoodsInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
} //251

message DevGoodsDetails{
  required int32 itemid = 1;
  required int64 currentCount=2;
  required int64 requiredCount = 3;
}

message GetDevGoodsInfoResult{
  required int32 failed =1;
  repeated DevGoodsDetails goods = 2;
  required int64 nextCycleTime = 3;
  required int64 rewardCoins = 4;
  required int64 rewardGolds = 5;
  required int32 rewardFame = 6;
  required int32 isFirstday = 7;
  required int32 mayorId = 8;
  required int32 oldDevDirection = 9;
  required int32 newDevDirection = 10;
  required int32 skill_administration=11;
  required int32 captain_skill_good_reputation = 12;
  required int32 captain_skill_good_reputation_captain_id = 13;
  required int32 captain_skill_good_reputation_captain_type = 14;
  required int64 totalInvestCycleSeconds = 15;
}//252

message ProvideDevGoods{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 goodsIndex = 3;
  required int32 count = 4;
}//253

message ProvideDevGoodsResult{
  required int32 failed = 1;
  required int32 addedCount = 2;
  required int32 currentCount = 3;
  required int32 requiredCount = 4;
  required int32 goodsId = 5;
  required int64 addedCoins = 6;
  required int32 addedFame = 7;
  required int64 coins = 8;
  required int64 fame = 9;
  required int32 addedExp = 10;
  required int64 exp = 11;
  required int32 new_fame_level = 12;
  required int32 skill_administration=13;
  required int32 captain_skill_good_reputation = 14;
  required int32 captain_skill_good_reputation_captain_id = 15;
}//254

message GetDevGoodsCount{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 goodsIndex = 3;
}//255

message GetDevGoodsCountResult{
  required int32 failed = 1;
  required int32 count = 2;
  required int32 goodsId = 3;
}//256

message GetFriendValue{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 forCity = 3;
}//257

message GetFriendValueResult{
  required int32 failed = 1;
  repeated FriendValue nation = 2;
  //repeated FriendValue personal = 3;
}//258

message GetUserInfoById{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 cid = 3; 
}//259

message GetUserInfoByIdResult{
  required int32 failed = 1;
  required string heroName = 2;
  required int32 level = 3;
  required int64 fame = 4;
  required string bio = 5;
  required string guildName = 6;
  required int32 icon = 7;
  required int32 relationStatus = 8; // 1 为好友
  required int32 nation = 9;
  required int32 guildIcon = 10;
  required int32 onlineSecs = 11;
  required int32 myGuildId = 12;
  required int32 canInvite = 13;
  required int32 userCid = 14;
}//260


message TestCreateNewGuild{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//261

message TestCreateNewGuildResult{
  required int32 failed = 1;
  required int64 reqLv = 3;
  required int64 reqFame = 4;
  required int64 reqCoins = 5;
  required int64 curLv = 6;
  required int64 curFame = 7;
  required int64 curCoins = 8;
}//262

message InviteUserToGuild{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 cid = 3;
} //263

message InviteUserToGuildResult{
  required int32 failed = 1;
} //264

message GetInvitationList{
  required int32 userId = 1;
  required int32 sessionId = 2;
} //265

message InvitationDefine{
  required int32 invitationId=1;
  required int32 invitorId = 2;
  required int32 iconId = 3;
  required string name = 4;
  required int32 invitorlevel = 5;
  required int32 invitorNationId = 6;
  required string invitorName = 7;
  required int32 invitorFameLv = 8;
  required int32 guildId = 9;
  required int32 invitorIconId = 10;
  required int32 guildCurNum = 11;
  required int32 guildMaxNum = 12;
  required int32 isGameMaster = 13;
}

message GetInvitationListResult{
  required int32 failed = 1;
  repeated InvitationDefine invitations= 2;
}//266

message DealWithInvitation{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 accept = 3;
  required int32 invitationId = 4;
} //267

message DealWithInvitationResult{
  required int32 failed = 1;
  required int32 accept = 2;
} //268

message GetVTicketMarketItems{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 type = 3;
//  required int32 refresh = 4;
} //269

message VTicketMarketItemDefine{
  required int32 itemId = 1;
  required int64 count = 2;
  required int32 discount = 3;
  required int32 price = 4; //x 100
  required int32 uniqueId = 5;
  required int32 promotion = 6;
  optional string iabString = 7;
}

message BlackMarketRandomShipAndEquipDefine{
  required int32 uniqueId = 1;
  required int32 itemId = 2;
  required int32 price = 3;
  required int32 count = 4;
}

message GetVTicketMarketItemsResult{
  required int32 failed = 1;
  repeated VTicketMarketItemDefine items = 2;
  required int64 golds = 3;
  required int64 coins = 4;
  required int32 type = 5;
//  required int32 refreshCost = 6;
  required int32 currentPackageSize = 7;
  required int32 maxPackageSize = 8;
  required int32 deliverServiceCD = 9;
  repeated BlackMarketRandomShipAndEquipDefine randomShip = 10;
  repeated BlackMarketRandomShipAndEquipDefine randomEquip = 11;
  repeated BlackMarketRandomShipAndEquipDefine randomItem = 12;
  required string payload = 13;
  required int64 blackMarketLeftTime = 14;
} //270

message BuyVTicketMarketItem{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 type = 3;
  required int32 uniqueId = 4;
  required int32 count = 5;
} // 271

message BuyVTicketMarketItemResult{
  required int32 failed = 1;
  required int32 type = 2;
  required int32 itemid = 5;
  required int64 golds = 3;
  required int64 coins = 4;
  required int32 count = 6;
  required int32 price = 7;
  required int64 drop_rate_increase_ramian_time = 8;
  required int32 drop_rate_increase_type = 9;
} //272

message GetCurrentInvestData{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//273

message GetCurrentInvestDataResult{
  required int32 failed = 1;
  optional RankInfoDefine thisSessionTop = 2;
  required int64 myInvest = 3;
  required int64 nextCycleTime = 4; //second
  required int64 lastSessionTopInvest = 5;
  required int32 skill_public_speaking=6;
  required int64 totalInvestCycleSeconds = 7;
}//274

message GetUserTasks{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//275

message attack_boss_info{
  required int32 bossId = 1;
  required int32 positionX = 2;
  required int32 positionY = 3;
}

message CompanionTaskDefine{
  required int32 taskId = 1;
  required int32 currentPartId = 2;  
  required int32 taskStatus = 3;//0 normal,1 completed
  required int32 protoId =4;
  required int32 completedTaskNum =5;
  required int32 beatNpcNum = 6;
}

message GetUserTasksResult{
  required int32 failed = 1;
  required int32 mainTaskId = 2;
  required int32 mainTaskStatus = 3;//0 normal,1 completed
  required int32 mainTaskCompletedPartId = 9;
  optional TaskDefine sideTask = 4;
  //repeated TaskDefine dailyTasks = 4;
  required int64 exp = 5;
  required int64 fame = 6;
  required int64 coins = 7;
  required int64 golds = 8;
  required int32 bargirlfelling = 10;
  required int32 completedAllTasks = 11;
  required int32 cityId = 12;
  required int64 prayRemainTime = 13;
  repeated int32 exploitSection = 14;
  required int32 myExploitScore = 15;
  required int32 attackTimes = 16;
  required int32 attackStatus = 17;//0 can not, 1 can attack
  required int64 disToZero = 18;
  required int32 pirateAttackStatus = 19;//0 can not 1 can attack
  required int32 lastPreyIndex = 20;
  optional attack_boss_info bossInfo= 21;
  required int32 prayCollingTime = 22;
  required int32 levelEnough = 23;
  repeated CompanionTaskDefine companionsTasks = 24;
  required int32 loot_count = 25;
  required int32 sign_for_loot_reward = 26;
  required int32 tavern_task_count = 27;
  required int32 sign_for_tavern_task_reward = 28;
  required int64 dis_to_oneday_finish = 29;
  required int32 boss_alive = 30;
}//276

message UseSudanMask{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int64 sudanMaskId = 3;
}//277

message UseSudanMaskResult{
  required int32 failed = 1;
}//278

message EquipHero {   //character_item
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 headId = 3;
  required int32 clothesId = 4;  
  required int32 weaponId = 5;
  required int32 accessId = 6;
  required int32 shoeId = 7;
}//279

message EquipHeroResult {
  required int32 failed = 1;
  required int32 hp = 2;
  required int32 attack = 3;
  required int32 defense = 4;
}//280

message GetHeroEquip{
  required int32 userId = 1;
  required int32 sessionId = 2;
} //281

message ItemIdPair{
  required int32 uniqueId = 1;
  required int32 iid = 2;
}

message GetHeroEquipResult {
  required int32 failed = 1;
  optional ItemIdPair head = 3;
  optional ItemIdPair clothes = 4;  
  optional ItemIdPair weapon = 5;
  optional ItemIdPair access = 6;
  optional ItemIdPair shoe = 7;
  required int32 defense = 8;
  required int32 hp = 9;
  required int32 attack = 10;
}//282

message BuyCityLicense{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//283

message BuyCityLicenseResult{
  required int32 failed = 1;
}//284

message DeleteUser{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 deleteAccount = 3;// 1,delete account,2 delete character
  required int32 languageCode = 4;
  required string apiUrl = 5;
}//285

message DeleteUserResult {
  required int32 failed = 1;
  required string email = 2;
  required int32 characterId = 3;
  required int32 deleteAccount = 4;
}//286

message ChangePassword{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required string password = 3;
  required int32 languageCode = 4;
  required string apiUrl = 5;
}//287

message ChangePasswordResult {
  required int32 failed = 1;
  required string password = 4;
}//288

message SelectHeroPositiveSkill{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 slotIndex = 3;
  required int32 skillId = 4;
} //289

message SelectHeroPositiveSkillResult{
  required int32 failed = 1;
  required int32 slotIndex = 3;
  required int32 skillId = 4;
  required int32 skillLv = 2;
} //290

message GetHeroPositiveSkillList{
  required int32 userId = 1;
  required int32 sessionId = 2;
} //291

message GetHeroPositiveSkillListResult{
  required int32 failed = 1;
  repeated SkillDefine skills = 2; 
} //292

message GetSelectedPositiveSkills{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//293

message PositiveSkill{
  required int32 id = 1;
  required int32 level = 2;
  required int32 slotIndex = 3;
}

message GetSelectedPositiveSkillsResult{
  required int32 failed = 1;
  repeated PositiveSkill skills = 2;
  required int32 skillPoints = 3;
}//294

message GetSailInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//295

message GetSailInfoResult{
  required int32 failed = 1;
  required LeaveCityResult seaData = 2;
  required int32 sailDays = 3;
  required int32 lastFightEventId = 4;
  repeated int32 wantedForceIds = 5;  
  optional CurrentMainTaskInfo mainTaskInfo = 6;
  required int32 failedLastFightWithoutCheck = 7;
  required int64 gold = 8;
  required int64 coins = 9;
  required int32 saveShipCost = 10;
  optional CurrentCompanionTaskInfo companionTaskInfo = 11;
  //required int32 delegateActive = 7;
}//296

message InsertUserName{
   required int32 userId = 1;
   required int32 sessionId = 2;
   required string userName = 3;
   required int32  iconIdx = 4;
   required int32  gender = 5;
}//297

message InsertUserNameResult{
	required int32 failed = 1;
}//298

message GetLeaderboard{
   required int32 userId = 1;
   required int32 sessionId = 2;
   required int64 byCoins = 3;
}//299

message LeaderboardItem {
  required int32 rank = 1;
  required string name = 2;
  required int32 exp = 3;
  required int32 country = 4;
  required int64 coins = 5;
  required int32 golds = 6;
  required int32 iconIdx = 7;
  required int64 fame = 8;
}

message GetLeaderboardResult{
   required int32 failed = 1;
   repeated LeaderboardItem items = 2;
}//300

message GetCityStatus{
   required int32 userId = 1;
   required int32 sessionId = 2;
   required int32 cityId = 3;
}//301

message GetCityStatusResult{
   required int32 failed = 1;
   required int32 friendValue = 2;
   required int32 hasLicense = 3;
   required int32 cityId = 4;
   required int32 isWanted = 5;
   required int32 in_war = 6;
}//302

message GetDiscoveredCities {
  required int32 userId = 1;
  required int32 sessionId = 2;
}//303

message GetDiscoveredCitiesResult{
  required int32 failed = 1;
  repeated int32 discoveredCityIds = 2;  
}//304

message AddDiscoveredCity {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 cityId = 3;
}//305

message AddDiscoveredCityResult{
  required int32 failed = 1;
  required int32 cityId = 2;  
  required int32 addedExp = 3;
  required int32 addedFame = 4;
  required int32 totalExp = 5;
  required int32 totalFame = 6;
  required int64 coins = 7;
  required int64 golds = 8;
  required int32 newLevel = 9;
  required int32 fameAdded = 10;
  repeated CaptainInfo captains = 11;
  required int32 new_fame_level = 12;
}//306

message ForceFightStatus {
  required int32 userId = 1;
  required int32 sessionId = 2;
} //307

message ForceFightStatusResult {
  required int32 failed = 1;
} //308

message GetCityProduces{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 cityId = 3;
}//309

message CityProduceDefine{
  required int32 goodsId = 1;
  required int32 requiredTradeLevel = 2;  
}

message GetCityProducesResult{
  required int32 failed = 1;
  required int32 cityId = 2;
  required int32 currentTradeLevel = 3;
  repeated CityProduceDefine produces = 4;
}//310

message GetCityDemands{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 cityId = 3;
}//311

message CityDemandsDefine{
  required int32 goodsId = 1;
  required int32 price = 2;
  required int32 isPopular = 3;
}

message GetCityDemandsResult{
  required int32 failed = 1;
  required int32 cityId = 2;
  required int32 currentTradeLevel = 3;
  repeated CityDemandsDefine prices = 4;
}//312

message GetMainTask{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//313

message GetMainTaskResult{
  required int32 failed = 1;
  required int32 currentTaskId = 2;
  required int32 currentTaskStatus = 3;//0 normal,1 completed
  required int32 completedTaskPart = 4;
  required int32 totalPartNum = 5;
}//314

message CompleteMainTask{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 partId = 3;     //if partId = 0, complete task immediately
}//315

message CompleteMainTaskResult{
  required int32 failed = 1;
  required int32 currentTaskId = 2;
  required int32 nextPartId = 3;// 0 if all parts are completed
  required int32 shouldReachCity = 4;
}//316

message GetMainTaskReward{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//317

message GetMainTaskRewardResult{
  required int32 failed = 1;
  required int32 rewardTaskId = 2;
  required int32 newTaskId = 3;
  required int64 exp = 4;
  required int64 coins = 5;
  required int32 golds = 6;
  required int64 fame = 7;
  required int64 rewardCoin = 10;
  required int32 rewardExp = 11;
  required int64 rewardGold = 12;
  required int32 rewardFame = 13;
  required int32 forceId = 15;
  required int32 forceAffect = 16;
  required int32 newLevel = 17;
  repeated CaptainInfo captains = 18;
  required int32 new_fame_level = 19;
}//318

message GetEventTaskList{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//319

message EventTaskListDefine{
  required int32 taskId = 1;
  required int32 taskStatus = 2;//0 normal,1 completed
}

message GetEventTaskListResult{
  required int32 failed = 1;
  repeated EventTaskListDefine acceptedTaskList = 2;
  repeated EventTaskListDefine taskList = 3;  
}//320

message HandleEventTask {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 taskId = 3;
  required int32 actionCode = 4; // 0:get task, 1:submit task,2 get reward,3 give up task
}//321

message HandleEventTaskResult {
  required int32 failed = 1;
  required int32 actionCode = 2;
  required int32 taskId = 3;
  required int64 coin = 4;
  required int64 exp = 5;
  required int64 fame = 6;
  required int64 gold = 7;
  
  required int64 rewardCoin = 10;
  required int32 rewardExp = 11;
  required int64 rewardGold = 12;
  required int32 rewardFame = 13;
  required int32 forceId = 15;
  required int32 forceAffect = 16;
  required int32 newLevel = 17;
  repeated CaptainInfo captains = 18;
  required int32 new_fame_level = 19;
}//322

message GetNpcScore{
  required int32 userId = 1;
  required int32 sessionId = 2;
  repeated int32 npcIds = 3;  // 0 for player himself
}//323

message GetNpcScoreResult{
  required int32 failed = 1;
  repeated int32 lowScores = 2;
  repeated int32 HigheScores = 3;
}//324

message GetServerInfo {
  required ServerVerion clientVersion = 1 [default = VERSION];
}  //325

message GetServerInfoResult {
  required ServerVerion serverVersion = 1 [default = VERSION];
  required ServerVerion clientVersion = 2;
  optional string updateUrl = 3;
  required int32  extraFlags = 4;
}  //326

message PingServer{
  required int32 userId = 1;
  required int32 sessionId = 2;      
} //327

message PingServerResult{
  required int32 timeOutSeconds = 1;   
} //328

message ExpandPackageSize {
  required int32 userId = 1;
  required int32 sessionId = 2;
}// 329

message ExpandPackageSizeResult {
  required int32 failed = 1;
  required int32 newPackageSize = 2;	
  required int64 cost = 3;
  required int64 coin = 4;
  required int64 gold = 5;
  required int64 fame = 6;
  required int64 exp = 7;
}// 330

message GetPretaskItems{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//331

message PretaskItemDefine{
  required int32 itemid = 1;
  required int32 itemtype = 2;
  required int32 itemamount = 3;
}

message GetPretaskItemsResult{
  required int32 failed = 1;
  required int64 coin = 2;
  required int64 bank = 3; //
  repeated PretaskItemDefine items = 4;
  required int64 addcoin = 5;
  required int64 addgolds = 6;
  required int64 golds = 7;
}//332

message GetOnsaleItems{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//333

message OnsaleItemDefine{
  required int32 itemid = 1;
  required int32 amount = 2;
}

message OnsaleItemPackageDefine{
  repeated OnsaleItemDefine onsaleShip = 1;
  repeated OnsaleItemDefine onsaleEquip = 2;
  repeated OnsaleItemDefine onsaleItem = 3;
  required int32 uniqueid = 4;
  required int32 vticket = 5;
  required int32 type = 6;
}

message GetOnsaleItemsResult{
  required int32 failed = 1;
  required int64 golds = 2;
  required int64 coins = 3;
  required int32 currentPackageSize = 4;
  required int32 maxPackageSize = 5;
  repeated OnsaleItemPackageDefine Goods = 6;
  optional OnsaleItemPackageDefine timeLevelGood = 7;
  required int64 remainTime = 8;
}//334

message BuyOnsaleItems{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 uniqueid = 3;
  required int32 type = 4;
}//335

message BuyOnsaleItemsResult{
  required int32 failed = 1;
  required int64 golds = 2;
  required int64 coins = 3;
  required int32 price = 4;
}//336

message SendCustomServiceInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;  
  required string info = 3;
  required int32 type = 4; 
  required string metaData = 5;   
  optional string email = 6;
} //337

message SendCustomServiceInfoResult{
  required int32 failed = 1;   
} //338

message GetIABItem{
  required int32 userId = 1;
  required int32 sessionId = 2;  
  required string name = 3;   
} //339

message GetIABItemResult{
  required int32 failed = 1; 
  required int64 addedVTickets = 2;
  required int64 addedCoins = 3;  
  required int64 gold =4;
} //340

message ChangeEmail{
  required int32 userId = 1;
  required int32 sessionId = 2;  
  required string newEmail = 3; 
  required int32 languageCode = 4;
  required string apiUrl = 5;
} //341

message ChangeEmailResult{
  required int32 failed = 1;   
  required string newEmail = 2;
  required string oldEmail = 3;
} //342

message TokenLogin {
  required string email = 1;
  required string token = 2;
  required bytes passwd1 = 5; //maybe used as rc4 password
  required string networkType = 3;
  required ServerVerion version = 4 [default = VERSION];
  required int32 tokenType = 6;//google,apple ,facebook
  required int32 languageCode = 7;
  required string apiUrl = 8;
  required string deviceInfo = 9;
  optional string refcode = 10;
  required string device_hash = 11;
  repeated ConfigJsonMd5 jsonMd5 = 12;
  required string notificationId = 13;
  required int32 osType = 14;//android 0,ios 1,pc 2
}  //343

message EngageInFightForTask{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 npcid = 3;
}//344

message EngageInFightForTaskResult{
  required int32 failed = 1;
  optional EngageInFightResult battelData = 2;
}//345

message AuthenticateAccount{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 languageCode = 3;
  required string apiUrl = 4;
  required string newEmail = 5;
  required int32 forSecurity = 6;//异地登录验证
}//346

message AuthenticateAccountResult{
  required int32 failed = 1;
  optional string newEmail = 2;
  required string oldEmail = 3;
  required int32 forSecurity = 4;
}//347

message Salvage{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 position_x = 3;
  required int32 position_y = 4;
}//348

message SalvageResult{
  required int32 failed = 1;
  required int64 addCoins = 2;
  required int32 addSupply = 3;
  repeated SalvageItem item = 4;
  required int64 coins = 5;
  required int32 supply = 6;
  required int32 currentPackageSize = 7;
  required int32 PackageSize = 8;
}//349

message GetEmailVerifiedReward{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//350

message GetEmailVerifiedRewardResult{
  required int32 failed = 1;
  required int64 addGolds = 2;
  required int64 golds = 3;
}//351

message StartSalvage{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 position_x = 3;
  required int32 position_y = 4;
}//352

message StartSalvageResult{
  required int32 failed = 1;
  required int64 needCoins = 2;
  required int64 coins = 3;
}//353

message GetEmailVerifiedInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//354

message GetEmailVerifiedInfoResult{
  required int32 failed = 1;
  required int64 addGolds = 2;
  required int32 authenticated = 3;
  required int32 getEmailVerifiedReward = 4;
}//355

message GetSalvageCondition{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 position_x = 3;
  required int32 position_y = 4;
}//356

message GetSalvageConditionResult{
  required int32 failed = 1;
  required int64 needCoins = 2;
  required int32 radius = 3;
}//357

message GetActivitiesProps{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//358

message GetActivitiesPropsResult{
  required int32 failed = 1;
  required int64 sailor_coins = 2;
  required int64 treasure = 3;
  required int64 treasure_key = 4;
}//359

message GetActivitiesGiftInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//360

message GetActivitiesGiftInfoResult{
  required int32 failed = 1;
  required int32 can_send_gift_count = 2;
  repeated int32 can_not_send_cid = 3;
}//361


message GetActivitiesPrayInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//362

message GetActivitiesPrayInfoResult{
  required int32 failed = 1;
  required int64 remain_time = 2;
  required int32 last_prey_index = 3;
  required int32 prey_cooling_time = 4;
}//363

message GetPray{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 idx = 3;
}//364

message GetPrayResult{
  required int32 failed = 1;
  required int64 add_sailer_coins = 2;
  required int64 sailer_coins = 3;
  optional SalvageItem item = 4;
  required int64 coins = 5;
  required int64 add_coins = 6;
  required int64 remain_time = 7;
  required int32 lastpreyindex = 8;
  required int32 prayCollingTime = 9;
}//365

message SendActivitiesGift{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 recipientsCid = 3;
}//366

message SendActivitiesGiftResult{
  required int32 failed = 1;
  required int32 can_send_gift_count = 2;
}//367

message GetPirateAttackInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//368

message GetPirateAttackInfoResult{
  required int32 failed = 1;
  repeated int32 exploitSection = 2;
  required int32 myExploitScore = 3;
  required int64 disToEnd = 4;
}//369

message GetAttackPirateInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 eventId = 3;
}//370

message GetAttackPirateInfoResult{
  required int32 failed = 1;
  required int32 attackTimes = 2;
  required int32 canAttackPirate = 3;
  required int64 disToStart = 4;
  required int64 disToEnd = 5;
  required int32 hurtValue = 6;
  required int32 levelEnough = 7;
  required int32 bossId = 8;
  required int32 strength = 9;
}//371

message GetVTicketMarketActivities{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 type = 3;
}//372

message VTicketMarketActivitiesDefine{
  required int32 uniqueId = 1;
  required int32 itemType = 2;
  required int32 itemId = 3;
  required int32 price = 4;
}
message GetVTicketMarketActivitiesResult{
  required int32 failed = 1;
  required int64 sailorCoins = 2;
  required int64 treasure = 3;
  required int64 treasureKey = 4;
  required int32 type = 5;
  repeated VTicketMarketItemDefine items = 6;
  repeated VTicketMarketActivitiesDefine randomItems = 7;
  required int64 activitiesLeftTime = 8;
}//373

message BuyVTicketMarketActivities{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 type = 3;
  required int32 uniqueId = 4;
  required int32 count = 5;
}//374

message BuyVTicketMarketActivitiesResult{
  required int32 failed = 1;
  required int32 type = 2;
  required int64 sailorCoins = 3;
  required int32 itemid = 4;
  required int32 count = 5;
  required int64 price = 6;//单价
} //375

message FinalMyExploitScore{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//376

message FinalMyExploitScoreResult{
  required int32 failed = 1;
  required int64 exp = 2;
  required int64 addExp = 3;
  required int64 fame = 4;
  required int64 addFame = 5;
  required int64 sailorCoins = 6;
  required int64 addSailorCoins = 7;
  required int32 canTaken = 8;
}//377

message FindLootPlayer{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 fromRevenge = 3;
}//378

message CharacterInfo{
  required int32 characterId = 1;
  required int32 level = 2;
  required int32 fameLevel = 3;
  required int32 iconIdx = 4;
  required int32 nation = 5;
  required string heroName = 6;
  required int32 gender = 7;
  required int32 lootForbid = 8;
}

message FindLootPlayerResult{
  required int32 failed = 1;
  required int32 cost = 2;
  optional CharacterInfo info = 3;
  required int32 fromRevenge = 4;
  required int64 canBeLooted = 5;
  optional EngageInFightResult battleData = 6;
}//379

message LootPlayer{
  required int32 userId = 1;
  required int32 sessionId = 2;  
}//380

message LootPlayerResult{
  required int32 failed = 1;
  //optional EngageInFightResult battleData = 2;  
}//381

message GetLootPlayerLog{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 attackFlag = 3;//如果是获取自己打劫别人的log，set to 1
  required int32 displayAllLog = 4;
}//382

message LootLog{
  required int32 id = 5;
  //required int32 looter_cid = 1;
  //required int32 lootee_cid = 2;
  required int64 coins = 3;
  required int32 secondsAgo = 4; 
  required CharacterInfo peerInfo = 6;
  required int32 isAttacked = 7;
  required int32 result = 8; //1 win,2 failed,3 even
}

message GetLootPlayerLogResult{
  required int32 failed = 1;
  repeated LootLog log = 2;
}//383

//返回 LootPlayerResult
message StartRevengeOnLootPlayer{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 logId = 3;
}//384

message AttackPirateDataInfo{
  required int32 nation = 1;
  required string userName = 2;
  required int32 hurt = 3;
  required int32 level = 4;
}

message GetAttackPirateRankInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//385

message GetAttackPirateRankInfoResult{
  required int32 failed = 1;
  repeated AttackPirateDataInfo RankInfo = 2;
  required int32 levelStart = 3;
  required int32 levelEnd = 4;
  required int32 headIcon = 5;
  required int32 myRank = 6;
  required int32 myDamage = 7;
  required int32 strength = 8;
}//386

message GetAttackPirateBossInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 eventId = 3;
}//387

message GetAttackPirateBossInfoResult{
  required int32 failed = 1;
  required string bossName = 2;
  required int32 bossMaxHp = 3;
  required int32 bossCurrentHp = 4;
  required int32 killerCid = 5;
  optional string killerName = 6;
  required int32 killerNation = 7;
  required int32 pirateFlags = 8;
  required int32 canAttack = 9;//0可以攻击 1没有票 2boss没有hp 3时间没到
  required int32 bossId = 10;
}//388

message InsuranceItem{
  required int32 insurePercent = 1;//赔付比例
  required float feeFactor = 2; //一天的保费 = 金额＊factor
  required int32 useVTicket = 3;//如果非0，保修需要用金币结算，
  required int32 protectDelegatePrice = 4;//如果非0，保护离线委托需要的v票 （每万） 
}

message InsuranceItemStatus{
  required int32 percent = 1;
  required int64 leftTimeInSeconds = 2;
  required int32 protectDelegate = 3;
  required int64 totalAmount = 4;
  required int64 leftAmount = 5;
}

message BuyInsurance{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int64 count = 3;
  required int32 days = 4;
  required int32 percent = 5;//赔付比例   
  required int32 protectDelegate = 6;
}//389

message BuyInsuranceResult{
  required int32 failed = 1;
  required int64 costCoin = 2;
  required int64 costVTicket = 3;
  required int64 coin = 4;
  required int64 gold = 5;
  required int64 fame = 6;
  required int64 exp = 7;
  required int64 leftTimeInSeconds = 8;
  required int32 protectDelegate = 9;
  required int32 percent = 10;
  required int64 count = 11;
}//390

message CompleteDialogs{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 dialogId = 3;
}//391

message CompleteDialogsResult{
  required int32 failed = 1;
  repeated int32 dialogIds = 2;
  required int64 exp = 3;
  required int64 coins = 4;
  required int32 golds = 5;
  required int64 fame = 6;
  required int64 rewardCoin = 7;
  required int32 rewardExp = 8;
  required int64 rewardGold = 9;
  required int32 rewardFame = 10;
  required int32 forceId = 11;
  required int32 forceAffect = 12;
  required int32 newLevel = 13;
  repeated CaptainInfo captains = 14;
  required int32 new_fame_level = 15;
  required int32 barGirlPrestige = 16;
}//392

message ObtainLottoMessage{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 lang = 3;//0 eng 1 simpchn 19 tradchn
}//393

message LottoMessage{
  required int32 type = 1;//0 本周 1 下周
  required string reward_text = 2;
  required string require_text = 3;
  required int32 time_zone = 4;
}

message ObtainLottoMessageResult{
  required int32 failed = 1;
  repeated LottoMessage lottoMsg = 2; 
}//394


message GetInviteBonus{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//395

message GetInviteBonusResult{
  required int32 failed = 1;
  required int32 bonusNum = 2;
  required int64 exp = 3;
  required int64 coins = 4;
  required int64 golds = 5;
  required int64 fame = 6;
}//396

message CompanyDefine{
  required int32 id = 12;
  required int32 fleetPosition = 1; //所在的船在舰队中的位置 ， 1-5，0 表示不在船上
  required int32 shipPosition = 2; //船上面仓室的位置，具体定义待定
  required int32 isCaptain = 3; //兼容老的captain
  required int32 protoId = 4; //captain 原型定义，或者 company 原型定义
  required int32 exp = 5;
  required int32 salary = 6;
  required int32 hp = 7;
  required int32 attack = 8;
  required int32 defense = 9;
  repeated SkillDefine normalSkill = 10;
  repeated SkillDefine specialSkill = 11;
  optional ItemIdPair head = 13;
  optional ItemIdPair clothes = 14;  
  optional ItemIdPair weapon = 15;
  optional ItemIdPair access = 16;
  optional ItemIdPair shoe = 17;
  required int32 sid = 18;
  required int32 rebirthGolds = 19;  
}

message GetCompanies{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//397

message GetCompaniesResult{
  required int32 failed = 1;
  repeated CompanyDefine infleet = 2;//小伙伴
  repeated CompanyDefine idleCaptains = 4;
  repeated CompanyDefine idleCompanies = 5;
  repeated CompanyDefine infleetCaptains = 6;
  required int32 totalSalary = 3;
}//398

message EquipCompany {   //给小伙伴装上装备
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 headId = 3;
  required int32 clothesId = 4;  
  required int32 weaponId = 5;
  required int32 accessId = 6;
  required int32 shoeId = 7;
  required int32 id = 8; //伙伴id，或者船长 id
  required int32 isCaptain = 9; //如果是船长set 1
}//399

message EquipCompanyResult {
  required int32 failed = 1;
  required int32 hp = 2;
  required int32 defense = 3;
  required int32 attack = 4;
}//400

message UnlockCompany{//解锁成功后，开始小伙伴剧情
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 companyProtoId = 3;
  required int32 method = 4; //0 收集碎片解锁，1 ，金钱解锁
}//401

message UnlockCompanyResult{
  required int32 failed = 1;
  required int32 method = 2;
  required int32 companyProtoId = 3;
  required int32 req_item1_price = 4;
  required int32 req_item2_price = 5;
  required int32 req_item3_price = 6;

  required int32 bought_item1_num = 7;
  required int32 bought_item2_num = 8;
  required int32 bought_item3_num = 9;
  required int32 totalCost = 10;
  required int64 coins = 11;
  required int64 golds = 12;
}//402

message GetCompanionsStatus{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//403

message CompanionsStatus{
  optional CompanyDefine define = 1;
  required int32 req_item1_iid = 9;
  required int32 req_item2_iid = 10;
  required int32 req_item3_iid = 11;

  required int32 req_item1_num = 2;
  required int32 req_item2_num = 3;
  required int32 req_item3_num = 4;

  required int32 req_item1_price = 12;
  required int32 req_item2_price = 13;
  required int32 req_item3_price = 14;

  required int32 status = 5; //0,have pieces,1, owned,2 in task
  required int32 currentTaskStep = 6;
  required int32 totalTaskSteps = 7;
  //required int64 unlockCost = 8;//解锁需要多少v票
  
}

message GetCompanionsStatusResult{
  required int32 failed = 1;
  repeated CompanionsStatus companions = 2;
}//404

message UnlockShipCabin{//解锁旗舰ship
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 shipId = 3;
  required int32 sid = 4;
  required int32 cabinNo = 5;
}//405

message UnlockShipCabinResult{
  required int32 failed = 1;
  required int32 shipId = 2;
  required int32 cabinNo = 3;
  required int64 coins = 4;
  required int64 golds = 5;
}//406

message GetShipCompanions{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//407

message ShipGearDetail{
  required int32 CompanionsId = 1;
  required int32 isCaptain = 2;
  required int32 shipPosition = 3;//解锁的仓位编号
  required int32 proto_id = 4;
  repeated SkillDefine normalSkill = 5;
  repeated SkillDefine specialSkill = 6;
  required int32 room_type = 7;
}

message GetShipCompanionsResult{
  required int32 failed = 1;
  required int32 shipid = 2;
  repeated ShipGearDetail details = 3;//已经解锁的仓位
  required int64 coins = 4;
  required int64 golds = 5;
}//408

message SetShipCompanions{//把小伙伴安排到对应仓室
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 companionsId = 3;//unequip 0
  required int32 cabinNo = 4; 
  required int32 isCaptain = 5;
  required int32 shipId = 6;
}//409

message SetShipCompanionsResult{
  required int32 failed = 1;
  required int32 companionsId = 3;
  required int32 cabinNo = 4; 
  required int32 isCaptain = 5;
  required int32 shipId = 6;
}//410

message SaveFailedFight {   //fix 80 v票bug
  required int32 userId = 1;
  required int32 sessionId = 2;
}//411

message SaveFailedFightResult {
  required int32 failed = 1;
}//412

message EndFailedFightByVTicket {
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 useVTicket = 3;
  required int32 fightType = 4;
}//413

message EndFailedFightByVTicketResult {
  required int32 failed = 1;
  required int32 last_safe_city = 2;
  required int64 lostCoin = 3;
  required int32 useVTicket = 4;
  repeated SkillDefine user_positive_skills = 5;
}//414

message CompleteCompanionTask{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 partId = 3;     //if partId = 0, complete task immediately
  required int32 taskId = 4;//可能有多个小伙伴任务并行
  required int32 missionFailed = 5;//失败分支，可能要跳转part
}//415

message CompleteCompanionTaskResult{
  required int32 failed = 1;
  required int32 currentTaskId = 2;
  required int32 currentPartId = 3;// 0 if all parts are completed
  required int32 shouldReachCity = 4;
  required int32 missionFailed = 5;
}//416

message DeductCoins{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 decuctCoins = 3;
}//417

message DeductCoinsResult{
  required int32 failed = 1;
  required int64 deductCoins = 2;
  required int64 coins = 3;
}//418

message UpdateUserSelection{
  required int32 dataVersion = 1;
  repeated int32 choices = 2;
}

message UpdateDataVersion{
  required int32 userId = 1;
  required int32 sessionId = 2;
  repeated UpdateUserSelection update = 3;
}//419

message UpdateDataVersionResult{
  required int32 failed = 1;
}//420

message CalFastHireCrew{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//421

message CalFastHireCrewResult{
  required int32 failed = 1;
  required int32 availMaxCrewNum = 2;
  required int64 fastHireNeedCoins = 3;
  required int32 needCrewNum = 4;
  required int64 fame = 5;
  required int32 hireCrewFee = 6;
  required int32 hireCrewNumOnce = 7;
  required int32 crewPrice = 8;
  required int32 ownCrewNum = 9;
}//422

message CompanionRebirth{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 companionId = 3;
  required int32 isCaptain = 4;
}//423

message CompanionRebirthResult{
  required int32 failed = 1;
  required int64 golds = 2;
  required int64 useGolds = 3;
//  required CompanyDefine companionRebirth = 3;
}//424

message RepairEquipment{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 equipId = 3;
  required int32 useType = 4;//1道具2v票
}//425

message RepairEquipmentResult{
  required int32 failed = 1;
  required int64 golds = 2;
  required int64 useGlods = 3;
}//426

message GetRepairEquipmentNeed{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 equipId = 3;
}//427

message GetRepairEquipmentNeedResult{
  required int32 failed = 1;
  required int32 itemIid = 2;
  required int32 itemNeedCount = 3;
  required int32 itemCurrentCount = 4;
  required int64 goldNeed = 5;
  required int32 equipId = 6;
}//428

message RecentOrderDefine{
  required int32 itemType = 1;
  required int32 itemId = 2;
  required int64 price = 3;
  required int64 number = 5;
  required int64 expTime = 6;
  optional string orderId = 7;
  required int32 cityId = 8;
  required int64 uniqueId = 9;
  required int32 cid=10;
  optional string orderPlayerName = 11;
}

message GetRecentOrder{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 type = 3;
}//429

message GetRecentOrderResult{
  required int32 failed = 1;
  required int32 type = 2;
  repeated RecentOrderDefine orders = 3;
}//430

message GetDropIncreaseRateInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//431

message GetDropIncreaseRateInfoResult{
  required int32 failed = 1;
  required int32 service_type = 2;
  required int64 remain_time = 3;
}//432

message GetDailyActivitiesReward{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 reward_type = 3;//1打劫2任务
}//433

message GetDailyActivitiesRewardResult{
  required int32 failed = 1;
  required int64 reward_golds = 2;
  required int64 golds = 3;
}//434

//熟练度相关
message AddProficiency{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 proficiencyId = 3;
  required int32 count = 4;
}//435

message AddProficiencyResult{
  required int32 failed = 1;
  required int32 value = 2;
}//436

message GetProficiencyValues{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//437

message ProficiencyDefine{
  required int32 proficiencyId = 1;
  required int32 value = 2;
}

message GetProficiencyValuesResult{
  required int32 failed = 1;
  repeated ProficiencyDefine values = 2;
}//438

message GetProficiencyBook{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 proficiencyId = 3;
}//455

message GetProficiencyBookResult{
  required int32 failed = 1;
  required int32 itemid = 2;
  required int32 proficiencyId = 3;
  required int32 uniqueId = 5;
  required int32 count = 4;
}//456
//国战相关
//战争中维修或者快速维修
message RepairCityDefenseInWar{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 type = 3; //0 coin 1,v ticket
  required int64 count = 4; //
}//439

message RepairCityDefenseInWarResult{
  required int32 failed = 1;
  required int32 defense = 2;
  required int32 cityId = 3;
  required int32 type = 4;
}//440
//增强攻击模式
message EnhanceAttack{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int64 consume_coins = 3;
  required int32 city = 4;
}//441

message EnhanceAttackResult{
  required int32 failed = 1;
  required int32 consume_coins = 2;
  required int32 coins = 3;
}//442

message GetCityPrepareStatus{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//443

message nation_war_pair{
  required int32 id = 1;//nation_war中id
  required int32 nation1 = 2;
  required int32 nation2 = 3;
  required int64 start_time = 4;
  required int32 time_sign = 5;//0 prepare 1 in war
  required int64 dis_to_end = 6;
}

message GetCityPrepareStatusResult{
  required int32 failed = 1;
  required int64 attack = 2;
  required int64 current_hp = 3;
  required int64 max_hp = 4;
  repeated nation_war_pair fight_nations = 5;
  optional nation_war_pair last_fight_info = 6;
  required int32 is_in_war = 7;
  required int32 remain_lanch_count = 8;
  required int32 is_city_mayor = 9;
  required int64 prepare_time = 10;
  required int64 in_war_time = 11;
}//444

message StartAttackCity{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 city_id = 3;//被攻打城市的id
}//445

message StartAttackCityResult{
  required int32 failed = 1;
  required int32 MyNation = 2;
  required int32 EnemyNation = 3;
}//446

message GetEnemyNation{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//447

message EnemyNation{
  required int32 nations_id = 1;
  required int64 can_robbed_coins = 2;
}

message GetEnemyNationResult{
  required int32 failed = 1;
  repeated EnemyNation nations = 2;
}//448

message AddCityRepairPool{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int64 consume_coins = 3;
}//449

message AddCityRepairPoolResult{
  required int32 failed = 1;
  required int32 cityId = 2;
  required int32 defense = 3;
  required int64 consume_coins = 4;
  required int64 coins = 5;
}//450

message AddCityAttackPool{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int64 consume_coins = 3;
}//451

message AddCityAttackPoolResult{
  required int32 failed = 1;
  required int32 attack = 2;
  required int32 cityId = 3;
  required int64 consume_coins = 4;
  required int64 coins = 5;
}//452

message GetPackageInfo{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//453

message GetPackageInfoResult{
  required int32 failed = 1;
  required int32 currentPackageSize = 2;
  required int32 maxPackageSize = 3;
}//454

message ApplyStateWar{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 nation = 3;
}//457

message ApplyStateWarResult{
  required int32 failed = 1;
  required int32 my_nation_id = 2;
  required int32 enemy_nation_id = 3;
}//458

message ContributionRankInfo{
  required int32 nation = 1;
  required int32 score = 2;
  required string name = 3;
  required int32 level = 4;
  required int32 cid = 5;
}

message GetContributionRank{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 nation = 3;
}//459

message GetContributionRankResult{
  required int32 failed = 1;
  repeated ContributionRankInfo rank_info = 2;
  optional ContributionRankInfo my_rank_info = 3;
  required int32 my_rank = 4;
  required int32 my_icon = 5;
}//460

message AddSupplyStation{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 nation = 3;
  required int64 consume_golds = 4;
}//461

message AddSupplyStationResult{
  required int32 failed = 1;
  required int64 consume_golds = 2;//花费的v票
  required int64 golds = 3;//当前的v票
}//462

//雇佣军
message HireArmy{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int64 consume_coins = 3;
  required int32 nation = 4;
}//463

message HireArmyResult{
  required int32 failed = 1;
  required int64 consume_coins = 2;
  required int64 coins = 3;//当前银币
}//464

message GetNationWarEntrance{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 city = 3;
}//465

message GetNationWarEntranceResult{
  required int32 failed = 1;
  repeated nation_war_pair fight_nations = 2;
  required int64 max_hp = 3;
  required int64 current_hp = 4;
  required int64 attack = 5;
  required int32 can_depot = 6;//是否能够补给
}//466

message EndAttackCity{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//467

message EndAttackCityResult{
  required int32 failed = 1;
}//468

message EnterDepotRepair{
  required int32 userId = 1;
  required int32 sessionId = 2;
  required int32 type = 3;//0 修船 1 补充水手 2 补充apply
}//469

message EnterDepotRepairResult{
  required int32 failed = 1;
}//470

message GetNationWarCityLost{
  required int32 userId = 1;
  required int32 sessionId = 2;
}//471

message CityLost{
  required int32 city_id = 1;
  required int32 nation_id = 2;
  required int64 robbed_coins = 3;
}

message GetNationWarCityLostResult{
  required int32 failed = 1;
  repeated CityLost my_city_lost = 2;
  repeated CityLost enemy_city_loss = 3;
}//472

message NationWarCharacterShip{
  required int32 ship_id = 1;
  required int32 hp = 2;
  required int32 max_hp = 3;
  required int64 city_hurt = 4;
}

message NationWarCharacterStatus{
  required int32 cid = 1;
  required int32 ship_num = 2;
  repeated NationWarCharacterShip ships = 3;
}
message NationWarBattleTurnResult{
  required int32 failed = 1; //2表示因为国战时间结束，被移出队列
  required int32 NationWarCharacterNum = 2; //格式错了，后续优化
  repeated NationWarCharacterStatus status = 3;  
}//473
